
<html lang="zh-TW">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Concur SAP 費用申請系統</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Microsoft YaHei', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #0f4c75 0%, #3282b8 50%, #bbe1fa 100%);
            min-height: 100vh;
            color: #333;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        /* Concur 風格的登入介面 */
        .login-container {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background: linear-gradient(135deg, #0f4c75 0%, #3282b8 100%);
        }

        .login-form {
            background: white;
            padding: 50px;
            border-radius: 20px;
            box-shadow: 0 25px 50px rgba(0,0,0,0.15);
            width: 100%;
            max-width: 450px;
            position: relative;
            overflow: hidden;
        }

        .login-form::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 5px;
            background: linear-gradient(90deg, #0f4c75, #3282b8, #bbe1fa);
        }

        .login-title {
            text-align: center;
            margin-bottom: 40px;
            color: #0f4c75;
            font-size: 32px;
            font-weight: 700;
        }

        .login-subtitle {
            text-align: center;
            margin-bottom: 30px;
            color: #666;
            font-size: 16px;
        }

        .form-group {
            margin-bottom: 25px;
            position: relative;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: #555;
            font-weight: 600;
            font-size: 14px;
        }

        .form-group input, .form-group select, .form-group textarea {
            width: 100%;
            padding: 15px 20px;
            border: 2px solid #e0e0e0;
            border-radius: 12px;
            font-size: 16px;
            transition: all 0.3s ease;
            background: #fafafa;
        }

        .form-group input:focus, .form-group select:focus, .form-group textarea:focus {
            outline: none;
            border-color: #3282b8;
            background: white;
            box-shadow: 0 0 0 3px rgba(50, 130, 184, 0.1);
        }

        .btn {
            padding: 15px 30px;
            border: none;
            border-radius: 12px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            position: relative;
            overflow: hidden;
        }

        .btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.5s;
        }

        .btn:hover::before {
            left: 100%;
        }

        .btn-primary {
            background: linear-gradient(135deg, #0f4c75, #3282b8);
            color: white;
            width: 100%;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(15, 76, 117, 0.3);
        }

        .btn-secondary {
            background: #6c757d;
            color: white;
        }

        .btn-success {
            background: linear-gradient(135deg, #28a745, #20c997);
            color: white;
        }

        .btn-danger {
            background: linear-gradient(135deg, #dc3545, #fd7e14);
            color: white;
        }

        .btn-warning {
            background: linear-gradient(135deg, #ffc107, #fd7e14);
            color: #212529;
        }

        .btn-info {
            background: linear-gradient(135deg, #17a2b8, #20c997);
            color: white;
        }

        /* 主介面 - Concur 風格 */
        .main-interface {
            display: none;
        }

        .header {
            background: white;
            padding: 25px 30px;
            border-radius: 20px;
            margin-bottom: 25px;
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-left: 5px solid #0f4c75;
        }

        .header h1 {
            color: #0f4c75;
            font-size: 28px;
            font-weight: 700;
        }

        .user-info {
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .user-info .user-name {
            color: #0f4c75;
            font-weight: 600;
            font-size: 16px;
        }

        /* 導航標籤 - Concur 風格 */
        .nav-tabs {
            display: flex;
            background: white;
            border-radius: 20px;
            padding: 15px;
            margin-bottom: 25px;
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
            overflow-x: auto;
        }

        .nav-tab {
            padding: 15px 25px;
            background: transparent;
            border: none;
            border-radius: 15px;
            cursor: pointer;
            margin-right: 10px;
            transition: all 0.3s ease;
            font-weight: 600;
            font-size: 14px;
            white-space: nowrap;
            position: relative;
        }

        .nav-tab.active {
            background: linear-gradient(135deg, #0f4c75, #3282b8);
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(15, 76, 117, 0.3);
        }

        .nav-tab:hover:not(.active) {
            background: #f8f9fa;
            transform: translateY(-1px);
        }

        .tab-content {
            background: white;
            padding: 40px;
            border-radius: 20px;
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
            min-height: 600px;
        }

        .tab-pane {
            display: none;
        }

        .tab-pane.active {
            display: block;
        }

        /* 表單佈局 */
        .form-row {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 25px;
            margin-bottom: 25px;
        }

        .form-col-full {
            grid-column: 1 / -1;
        }

        /* 表格樣式 - Concur 風格 */
        .table-container {
            overflow-x: auto;
            margin-top: 30px;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
        }

        table {
            width: 100%;
            border-collapse: collapse;
            background: white;
            border-radius: 15px;
            overflow: hidden;
        }

        th, td {
            padding: 18px 15px;
            text-align: left;
            border-bottom: 1px solid #e9ecef;
        }

        th {
            background: linear-gradient(135deg, #0f4c75, #3282b8);
            color: white;
            font-weight: 600;
            font-size: 14px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        tr:hover {
            background-color: #f8f9fa;
        }

        /* 狀態標籤 */
        .status-badge {
            padding: 6px 15px;
            border-radius: 25px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .status-draft { 
            background: linear-gradient(135deg, #ffc107, #fd7e14); 
            color: #212529; 
        }
        .status-pending { 
            background: linear-gradient(135deg, #17a2b8, #20c997); 
            color: white; 
        }
        .status-testing { 
            background: linear-gradient(135deg, #6610f2, #e83e8c); 
            color: white; 
        }
        .status-approved { 
            background: linear-gradient(135deg, #28a745, #20c997); 
            color: white; 
        }
        .status-rejected { 
            background: linear-gradient(135deg, #dc3545, #fd7e14); 
            color: white; 
        }

        /* 模態框 */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.6);
            backdrop-filter: blur(5px);
        }

        .modal-content {
            background-color: white;
            margin: 3% auto;
            padding: 40px;
            border-radius: 20px;
            width: 90%;
            max-width: 700px;
            box-shadow: 0 25px 50px rgba(0,0,0,0.2);
            max-height: 90vh;
            overflow-y: auto;
        }

        .modal-header {
            border-bottom: 2px solid #e9ecef;
            padding-bottom: 20px;
            margin-bottom: 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .modal-title {
            color: #0f4c75;
            font-size: 24px;
            font-weight: 700;
        }

        .close {
            color: #aaa;
            font-size: 32px;
            font-weight: bold;
            cursor: pointer;
            line-height: 1;
            transition: color 0.3s;
        }

        .close:hover {
            color: #0f4c75;
        }

        /* 檔案上傳區域 */
        .file-drop-area {
            border: 3px dashed #ccc;
            border-radius: 15px;
            padding: 50px;
            text-align: center;
            background: #f8f9fa;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .file-drop-area:hover {
            border-color: #3282b8;
            background: #e3f2fd;
            transform: translateY(-2px);
        }

        .file-drop-area.dragover {
            border-color: #0f4c75;
            background: linear-gradient(135deg, rgba(15, 76, 117, 0.1), rgba(50, 130, 184, 0.1));
        }

        .file-icon {
            font-size: 48px;
            color: #3282b8;
            margin-bottom: 15px;
        }

        .file-list {
            margin-top: 20px;
        }

        .file-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 20px;
            background: #f8f9fa;
            border-radius: 12px;
            margin-bottom: 10px;
            border-left: 4px solid #3282b8;
        }

        .file-info {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .file-name {
            font-weight: 600;
            color: #0f4c75;
        }

        .file-size {
            color: #666;
            font-size: 14px;
        }

        /* 預算控管警告 */
        .budget-alert {
            border-radius: 15px;
            padding: 20px;
            margin: 20px 0;
            border-left: 5px solid;
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .budget-warning {
            background: linear-gradient(135deg, #fff3cd, #ffeaa7);
            border-left-color: #ffc107;
            color: #856404;
        }

        .budget-danger {
            background: linear-gradient(135deg, #f8d7da, #f5c6cb);
            border-left-color: #dc3545;
            color: #721c24;
        }

        .budget-success {
            background: linear-gradient(135deg, #d4edda, #c3e6cb);
            border-left-color: #28a745;
            color: #155724;
        }

        /* 工作流程 */
        .workflow {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin: 30px 0;
            padding: 25px;
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            border-radius: 15px;
        }

        .workflow-step {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 10px;
            flex: 1;
            position: relative;
        }

        .workflow-step:not(:last-child)::after {
            content: '';
            position: absolute;
            top: 20px;
            right: -50%;
            width: 100%;
            height: 3px;
            background: #dee2e6;
            z-index: 1;
        }

        .workflow-step.active:not(:last-child)::after {
            background: linear-gradient(90deg, #28a745, #20c997);
        }

        .workflow-icon {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: #dee2e6;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            color: white;
            z-index: 2;
            position: relative;
        }

        .workflow-step.active .workflow-icon {
            background: linear-gradient(135deg, #28a745, #20c997);
        }

        .workflow-step.completed .workflow-icon {
            background: linear-gradient(135deg, #0f4c75, #3282b8);
        }

        .workflow-label {
            font-size: 12px;
            font-weight: 600;
            text-align: center;
            color: #666;
        }

        /* 儀表板卡片 */
        .dashboard-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 25px;
            margin-bottom: 30px;
        }

        .dashboard-card {
            background: white;
            padding: 30px;
            border-radius: 20px;
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
            border-left: 5px solid;
            transition: transform 0.3s ease;
        }

        .dashboard-card:hover {
            transform: translateY(-5px);
        }

        .dashboard-card.primary { border-left-color: #0f4c75; }
        .dashboard-card.success { border-left-color: #28a745; }
        .dashboard-card.warning { border-left-color: #ffc107; }
        .dashboard-card.danger { border-left-color: #dc3545; }

        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .card-title {
            font-size: 16px;
            font-weight: 600;
            color: #666;
        }

        .card-value {
            font-size: 32px;
            font-weight: 700;
            color: #0f4c75;
        }

        /* 進度條 */
        .progress-bar {
            width: 100%;
            height: 12px;
            background: #e9ecef;
            border-radius: 6px;
            overflow: hidden;
            margin-top: 15px;
        }

        .progress-fill {
            height: 100%;
            border-radius: 6px;
            transition: width 0.3s ease;
        }

        /* 響應式設計 */
        @media (max-width: 768px) {
            .form-row {
                grid-template-columns: 1fr;
            }
            
            .nav-tabs {
                flex-wrap: wrap;
            }
            
            .workflow {
                flex-direction: column;
                gap: 20px;
            }
            
            .workflow-step:not(:last-child)::after {
                display: none;
            }
            
            .dashboard-cards {
                grid-template-columns: 1fr;
            }
        }

        /* 動畫效果 */
        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .tab-pane.active {
            animation: slideIn 0.3s ease-out;
        }

        /* 搜索和篩選 */
        .search-filters {
            background: #f8f9fa;
            padding: 25px;
            border-radius: 15px;
            margin-bottom: 25px;
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
        }

        .search-input {
            position: relative;
        }

        .search-input input {
            padding-left: 45px;
        }

        .search-input::before {
            content: '🔍';
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            font-size: 16px;
        }
    </style>
</head>
<body>
    <!-- 登入介面 -->
    <div id="loginContainer" class="login-container">
        <div class="login-form">
            <h2 class="login-title">Concur SAP</h2>
            <p class="login-subtitle">費用申請管理系統</p>
            <form id="loginForm">
                <div class="form-group">
                    <label for="username">使用者帳號</label>
                    <input type="text" id="username" name="username" placeholder="請輸入帳號" required autocomplete="username">
                </div>
                <div class="form-group">
                    <label for="password">密碼</label>
                    <input type="password" id="password" name="password" placeholder="請輸入密碼" required autocomplete="current-password">
                </div>
                
                <!-- 快速登入按鈕 -->
                <div style="margin: 15px 0; display: flex; gap: 10px; flex-wrap: wrap;">
                    <button type="button" class="btn btn-info" onclick="quickLogin('admin', 'admin123')" style="flex: 1; min-width: 120px; padding: 8px;">管理員</button>
                    <button type="button" class="btn btn-warning" onclick="quickLogin('manager', 'manager123')" style="flex: 1; min-width: 120px; padding: 8px;">經理</button>
                    <button type="button" class="btn btn-success" onclick="quickLogin('user01', 'user123')" style="flex: 1; min-width: 120px; padding: 8px;">員工</button>
                </div>
                
                <!-- 測試帳號說明 -->
                <div style="background: #f8f9fa; padding: 15px; border-radius: 10px; margin: 20px 0; font-size: 13px;">
                    <h4 style="color: #0f4c75; margin-bottom: 10px;">📋 所有測試帳號</h4>
                    <div style="display: grid; gap: 6px; font-family: monospace;">
                        <div><strong>admin</strong> / admin123 - 系統管理員</div>
                        <div><strong>manager</strong> / manager123 - 部門經理</div>
                        <div><strong>user01</strong> / user123 - 一般員工</div>
                        <div><strong>finance</strong> / finance123 - 財務人員</div>
                        <div><strong>test</strong> / test123 - 測試人員</div>
                        <div><strong>ceo</strong> / ceo123 - 總經理</div>
                    </div>
                </div>
                
                <button type="submit" class="btn btn-primary">登入系統</button>
            </form>
        </div>
    </div>

    <!-- 主要介面 -->
    <div id="mainInterface" class="main-interface">
        <div class="container">
            <div class="header">
                <h1>Concur SAP 費用申請系統</h1>
                <div class="user-info">
                    <span class="user-name" id="currentUser">使用者</span>
                    <button class="btn btn-secondary" onclick="logout()">登出</button>
                </div>
            </div>

                            <div class="nav-tabs">
                <button class="nav-tab active" onclick="showTab('dashboard')">🏠 儀表板</button>
                <button class="nav-tab" onclick="showTab('expense')">💰 費用申請</button>
                <button class="nav-tab" onclick="showTab('pending')">📋 待審核管理</button>
                <button class="nav-tab" onclick="showTab('users')">👥 使用者管理</button>
                <button class="nav-tab" onclick="showTab('account')">📊 會計科目</button>
                <button class="nav-tab" onclick="showTab('department')">🏢 部門管理</button>
                <button class="nav-tab" onclick="showTab('budget')">📈 預算控管</button>
                <button class="nav-tab" onclick="showTab('testing')">🧪 測試流程</button>
                <button class="nav-tab" onclick="showTab('approval')">✅ 核准流程</button>
                <button class="nav-tab" onclick="showTab('report')">📋 報表管理</button>
            </div>

            <!-- 儀表板 -->
            <div id="dashboard" class="tab-content">
                <div class="tab-pane active">
                    <h3 style="margin-bottom: 30px; color: #0f4c75; font-size: 24px;">系統總覽</h3>
                    
                    <div class="dashboard-cards">
                        <div class="dashboard-card primary">
                            <div class="card-header">
                                <span class="card-title">總申請數</span>
                                <span style="font-size: 24px;">📄</span>
                            </div>
                            <div class="card-value" id="totalExpenses">0</div>
                        </div>
                        
                        <div class="dashboard-card warning">
                            <div class="card-header">
                                <span class="card-title">待審核</span>
                                <span style="font-size: 24px;">⏳</span>
                            </div>
                            <div class="card-value" id="pendingExpenses">0</div>
                        </div>
                        
                        <div class="dashboard-card success">
                            <div class="card-header">
                                <span class="card-title">已核准</span>
                                <span style="font-size: 24px;">✅</span>
                            </div>
                            <div class="card-value" id="approvedExpenses">0</div>
                        </div>
                        
                        <div class="dashboard-card danger">
                            <div class="card-header">
                                <span class="card-title">本月支出</span>
                                <span style="font-size: 24px;">💸</span>
                            </div>
                            <div class="card-value" id="monthlySpending">$0</div>
                        </div>
                    </div>

                    <div class="budget-alert budget-success">
                        <span style="font-size: 24px;">ℹ️</span>
                        <div>
                            <strong>系統狀態：</strong>正常運行中<br>
                            <small>最後更新：<span id="lastUpdate"></span></small>
                        </div>
                    </div>
                </div>
            </div>

            <!-- 費用申請頁面 -->
            <div id="expense" class="tab-content">
                <div class="tab-pane">
                    <h3 style="margin-bottom: 30px; color: #0f4c75;">新增費用申請</h3>
                    
                    <!-- 工作流程指示器 -->
                    <div class="workflow">
                        <div class="workflow-step active">
                            <div class="workflow-icon">1</div>
                            <span class="workflow-label">填寫資料</span>
                        </div>
                        <div class="workflow-step">
                            <div class="workflow-icon">2</div>
                            <span class="workflow-label">預算檢查</span>
                        </div>
                        <div class="workflow-step">
                            <div class="workflow-icon">3</div>
                            <span class="workflow-label">間接主管</span>
                        </div>
                        <div class="workflow-step">
                            <div class="workflow-icon">4</div>
                            <span class="workflow-label">直接主管</span>
                        </div>
                        <div class="workflow-step">
                            <div class="workflow-icon">5</div>
                            <span class="workflow-label">完成</span>
                        </div>
                    </div>

                    <form id="expenseForm">
                        <div class="form-row">
                            <div class="form-group">
                                <label for="applicant">申請人 *</label>
                                <input type="text" id="applicant" name="applicant" placeholder="請輸入申請人姓名" required>
                            </div>
                            <div class="form-group">
                                <label for="applicantDept">申請部門 *</label>
                                <select id="applicantDept" name="applicantDept" required>
                                    <option value="">請選擇申請部門</option>
                                </select>
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group">
                                <label for="onBehalfOf">代申請人</label>
                                <input type="text" id="onBehalfOf" name="onBehalfOf" placeholder="如有代申請人請填寫">
                            </div>
                            <div class="form-group">
                                <label for="onBehalfOfDept">代申請部門</label>
                                <select id="onBehalfOfDept" name="onBehalfOfDept">
                                    <option value="">請選擇代申請部門</option>
                                </select>
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group">
                                <label for="accountCode">會計科目 *</label>
                                <select id="accountCode" name="accountCode" required onchange="checkBudgetOnChange()">
                                    <option value="">請選擇會計科目</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="salesAmount">銷售額 (TWD) *</label>
                                <input type="number" id="salesAmount" name="salesAmount" placeholder="0.00" required min="0" step="0.01" onchange="calculateTotal()">
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group">
                                <label for="taxType">稅率類型</label>
                                <select id="taxType" name="taxType" onchange="updateTaxRate()">
                                    <option value="5">5% 營業稅 (一般稅率)</option>
                                    <option value="0">0% 免稅</option>
                                    <option value="custom">自訂稅率</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="taxRate">稅率 (%)</label>
                                <input type="number" id="taxRate" name="taxRate" value="5" min="0" max="100" step="0.01" onchange="calculateTotal()" readonly>
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group">
                                <label for="inputTax">進項稅額 (TWD)</label>
                                <input type="number" id="inputTax" name="inputTax" placeholder="自動計算" step="0.01" readonly>
                            </div>
                            <div class="form-group">
                                <label for="amount">總計金額 (TWD) *</label>
                                <input type="number" id="amount" name="amount" placeholder="0.00" required min="0" step="0.01" readonly style="background: #f8f9fa; font-weight: bold; color: #0f4c75;">
                            </div>
                        </div>

                        <!-- 稅務計算明細 -->
                        <div id="taxCalculationDetail" style="background: #f8f9fa; padding: 15px; border-radius: 10px; margin: 15px 0; border-left: 4px solid #0f4c75;">
                            <h5 style="color: #0f4c75; margin-bottom: 10px;">💰 稅務計算明細</h5>
                            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 10px; font-size: 14px;">
                                <div>
                                    <strong>銷售額：</strong>
                                    <span id="displaySalesAmount">$0</span>
                                </div>
                                <div>
                                    <strong>進項稅額：</strong>
                                    <span id="displayInputTax">$0</span>
                                </div>
                                <div>
                                    <strong>適用稅率：</strong>
                                    <span id="displayTaxRate">5%</span>
                                </div>
                                <div style="color: #0f4c75; font-weight: bold;">
                                    <strong>總計金額：</strong>
                                    <span id="displayTotalAmount">$0</span>
                                </div>
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group">
                                <label for="invoiceNumber">統一發票號碼</label>
                                <input type="text" id="invoiceNumber" name="invoiceNumber" placeholder="例: AB12345678" pattern="[A-Z]{2}[0-9]{8}">
                            </div>
                            <div class="form-group">
                                <label for="taxId">統一編號</label>
                                <input type="text" id="taxId" name="taxId" placeholder="例: 12345678" pattern="[0-9]{8}">
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group form-col-full">
                                <label for="description">申請說明 *</label>
                                <textarea id="description" name="description" rows="4" placeholder="請詳細說明費用用途和原因" required></textarea>
                            </div>
                        </div>

                        <!-- 附件上傳 -->
                        <div class="form-group">
                            <label>附件上傳</label>
                            <div class="file-drop-area" onclick="document.getElementById('fileInput').click()">
                                <div class="file-icon">📎</div>
                                <p><strong>點擊上傳</strong> 或拖拽檔案到此處</p>
                                <p style="font-size: 14px; color: #666; margin-top: 10px;">支援 PDF, DOC, DOCX, XLS, XLSX, JPG, PNG 格式，單檔最大 10MB</p>
                                <input type="file" id="fileInput" multiple accept=".pdf,.doc,.docx,.xls,.xlsx,.jpg,.jpeg,.png" style="display: none;" onchange="handleFiles(this.files)">
                            </div>
                            <div id="fileList" class="file-list"></div>
                        </div>

                        <div id="budgetAlert"></div>

                        <div style="margin-top: 30px; display: flex; gap: 15px;">
                            <button type="submit" class="btn btn-primary">提交申請</button>
                            <button type="button" class="btn btn-warning" onclick="saveDraft()">儲存草稿</button>
                            <button type="button" class="btn btn-info" onclick="testWorkflow()">測試流程</button>
                            <button type="reset" class="btn btn-secondary">重置表單</button>
                        </div>
                    </form>

                    <h3 style="margin: 50px 0 30px 0; color: #0f4c75;">我的申請記錄</h3>
                    
                    <!-- 搜索和篩選 -->
                    <div class="search-filters">
                        <div class="search-input">
                            <input type="text" placeholder="搜索申請記錄..." onkeyup="filterExpenses()">
                        </div>
                        <div class="form-group">
                            <select id="statusFilter" onchange="filterExpenses()">
                                <option value="">所有狀態</option>
                                <option value="draft">草稿</option>
                                <option value="testing">測試中</option>
                                <option value="pending">待審核</option>
                                <option value="approved">已核准</option>
                                <option value="rejected">已拒絕</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <input type="month" id="dateFilter" onchange="filterExpenses()">
                        </div>
                    </div>
                    
                    <div class="table-container">
                        <table id="expenseTable">
                            <thead>
                                <tr>
                                    <th>申請日期</th>
                                    <th>申請人</th>
                                    <th>會計科目</th>
                                    <th>銷售額</th>
                                    <th>進項稅額</th>
                                    <th>總計金額</th>
                                    <th>狀態</th>
                                    <th>進度</th>
                                    <th>操作</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- 待審核管理 -->
            <div id="pending" class="tab-content">
                <div class="tab-pane">
                    <h3 style="margin-bottom: 30px; color: #0f4c75;">待審核費用申請管理</h3>
                    
                    <!-- 審核狀態統計 -->
                    <div class="dashboard-cards" style="margin-bottom: 30px;">
                        <div class="dashboard-card warning">
                            <div class="card-header">
                                <span class="card-title">待間接主管審核</span>
                                <span style="font-size: 24px;">👥</span>
                            </div>
                            <div class="card-value" id="pendingIndirectCount">0</div>
                        </div>
                        <div class="dashboard-card primary">
                            <div class="card-header">
                                <span class="card-title">待直接主管審核</span>
                                <span style="font-size: 24px;">👤</span>
                            </div>
                            <div class="card-value" id="pendingDirectCount">0</div>
                        </div>
                        <div class="dashboard-card success">
                            <div class="card-header">
                                <span class="card-title">今日已審核</span>
                                <span style="font-size: 24px;">✅</span>
                            </div>
                            <div class="card-value" id="todayApprovedCount">0</div>
                        </div>
                        <div class="dashboard-card danger">
                            <div class="card-header">
                                <span class="card-title">逾期未審核</span>
                                <span style="font-size: 24px;">⏰</span>
                            </div>
                            <div class="card-value" id="overdueCount">0</div>
                        </div>
                    </div>

                    <!-- 篩選條件 -->
                    <div class="search-filters">
                        <div class="search-input">
                            <input type="text" id="pendingSearchInput" placeholder="搜索申請人或申請說明..." onkeyup="filterPendingExpenses()">
                        </div>
                        <div class="form-group">
                            <select id="pendingStatusFilter" onchange="filterPendingExpenses()">
                                <option value="">所有待審核</option>
                                <option value="pending_indirect">待間接主管審核</option>
                                <option value="pending_direct">待直接主管審核</option>
                                <option value="pending_ceo">待總經理審核</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <select id="pendingDeptFilter" onchange="filterPendingExpenses()">
                                <option value="">所有部門</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <select id="pendingAmountFilter" onchange="filterPendingExpenses()">
                                <option value="">所有金額</option>
                                <option value="small">小額 (≤5,000)</option>
                                <option value="medium">中額 (5,001-20,000)</option>
                                <option value="large">大額 (>20,000)</option>
                            </select>
                        </div>
                    </div>

                    <!-- 待審核列表 -->
                    <div class="table-container">
                        <table id="pendingExpenseTable">
                            <thead>
                                <tr>
                                    <th>申請編號</th>
                                    <th>申請日期</th>
                                    <th>申請人</th>
                                    <th>部門</th>
                                    <th>金額</th>
                                    <th>會計科目</th>
                                    <th>當前審核階段</th>
                                    <th>審核人</th>
                                    <th>剩餘時間</th>
                                    <th>操作</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div id="account" class="tab-content">
                <div class="tab-pane">
                    <h3 style="margin-bottom: 30px; color: #0f4c75;">會計科目管理</h3>
                    
                    <div style="display: flex; gap: 15px; margin-bottom: 20px; flex-wrap: wrap;">
                        <button class="btn btn-primary" onclick="showModal('accountModal')" style="margin-bottom: 20px;">
                            ➕ 新增會計科目
                        </button>
                        <button class="btn btn-info" onclick="showModal('categoryModal')" style="margin-bottom: 20px;">
                            🏷️ 管理科目分類
                        </button>
                        <button class="btn btn-success" onclick="exportAccounts()" style="margin-bottom: 20px;">
                            📊 匯出科目清單
                        </button>
                    </div>

                    <!-- 科目分類篩選 -->
                    <div class="search-filters">
                        <div class="search-input">
                            <input type="text" id="accountSearchInput" placeholder="搜索科目代碼或名稱..." onkeyup="filterAccounts()">
                        </div>
                        <div class="form-group">
                            <select id="categoryFilter" onchange="filterAccounts()">
                                <option value="">所有分類</option>
                                <option value="travel">✈️ 差旅費用</option>
                                <option value="office">🏢 辦公費用</option>
                                <option value="meal">🍽️ 餐飲費用</option>
                                <option value="training">📚 培訓費用</option>
                                <option value="marketing">📢 行銷費用</option>
                                <option value="maintenance">🔧 維護費用</option>
                                <option value="technology">💻 科技費用</option>
                                <option value="communication">📞 通訊費用</option>
                                <option value="utilities">⚡ 水電費用</option>
                                <option value="rent">🏠 租賃費用</option>
                                <option value="insurance">🛡️ 保險費用</option>
                                <option value="legal">⚖️ 法律費用</option>
                                <option value="finance">💰 財務費用</option>
                                <option value="consulting">👨‍💼 顧問費用</option>
                                <option value="research">🔬 研發費用</option>
                                <option value="entertainment">🎉 娛樂費用</option>
                                <option value="medical">🏥 醫療費用</option>
                                <option value="transportation">🚛 運輸費用</option>
                                <option value="security">🔒 安全費用</option>
                                <option value="other">📋 其他費用</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <select id="statusFilter" onchange="filterAccounts()">
                                <option value="">所有狀態</option>
                                <option value="normal">✅ 正常</option>
                                <option value="warning">⚠️ 警告</option>
                                <option value="danger">🚨 超支</option>
                            </select>
                        </div>
                    </div>

                    <!-- 科目分類統計 -->
                    <div class="dashboard-cards" style="margin-bottom: 30px;">
                        <div class="dashboard-card primary">
                            <div class="card-header">
                                <span class="card-title">科目總數</span>
                                <span style="font-size: 24px;">📊</span>
                            </div>
                            <div class="card-value" id="totalAccounts">0</div>
                        </div>
                        <div class="dashboard-card success">
                            <div class="card-header">
                                <span class="card-title">正常科目</span>
                                <span style="font-size: 24px;">✅</span>
                            </div>
                            <div class="card-value" id="normalAccounts">0</div>
                        </div>
                        <div class="dashboard-card warning">
                            <div class="card-header">
                                <span class="card-title">警告科目</span>
                                <span style="font-size: 24px;">⚠️</span>
                            </div>
                            <div class="card-value" id="warningAccounts">0</div>
                        </div>
                        <div class="dashboard-card danger">
                            <div class="card-header">
                                <span class="card-title">超支科目</span>
                                <span style="font-size: 24px;">🚨</span>
                            </div>
                            <div class="card-value" id="dangerAccounts">0</div>
                        </div>
                    </div>
                    
                    <div class="table-container">
                        <table id="accountTable">
                            <thead>
                                <tr>
                                    <th>科目代碼</th>
                                    <th>科目名稱</th>
                                    <th>分類</th>
                                    <th>預算額度</th>
                                    <th>已使用額度</th>
                                    <th>使用率</th>
                                    <th>狀態</th>
                                    <th>操作</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- 部門管理 -->
            <div id="department" class="tab-content">
                <div class="tab-pane">
                    <h3 style="margin-bottom: 30px; color: #0f4c75;">部門管理</h3>
                    <button class="btn btn-primary" onclick="showModal('departmentModal')" style="margin-bottom: 20px;">
                        ➕ 新增部門
                    </button>
                    
                    <div class="table-container">
                        <table id="departmentTable">
                            <thead>
                                <tr>
                                    <th>部門代碼</th>
                                    <th>部門名稱</th>
                                    <th>間接主管</th>
                                    <th>直接主管</th>
                                    <th>預算額度</th>
                                    <th>已用預算</th>
                                    <th>操作</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- 預算控管 -->
            <div id="budget" class="tab-content">
                <div class="tab-pane">
                    <h3 style="margin-bottom: 30px; color: #0f4c75;">預算控管總覽</h3>
                    <div id="budgetOverview"></div>
                </div>
            </div>

            <!-- 測試流程 -->
            <div id="testing" class="tab-content">
                <div class="tab-pane">
                    <h3 style="margin-bottom: 30px; color: #0f4c75;">測試流程管理</h3>
                    
                    <div class="budget-alert budget-success">
                        <span style="font-size: 24px;">🧪</span>
                        <div>
                            <strong>測試流程說明：</strong><br>
                            測試流程用於驗證申請資料的完整性和準確性，包括：格式檢查、預算驗證、審核權限確認等。
                        </div>
                    </div>

                    <div style="margin: 30px 0;">
                        <h4 style="color: #0f4c75; margin-bottom: 20px;">測試設定</h4>
                        <div class="form-row">
                            <div class="form-group">
                                <label for="testLevel">測試等級</label>
                                <select id="testLevel">
                                    <option value="basic">基本測試</option>
                                    <option value="standard">標準測試</option>
                                    <option value="comprehensive">完整測試</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="autoTest">自動測試</label>
                                <select id="autoTest">
                                    <option value="enabled">啟用</option>
                                    <option value="disabled">停用</option>
                                </select>
                            </div>
                        </div>
                        <button class="btn btn-info" onclick="runSystemTest()">執行系統測試</button>
                    </div>

                    <h4 style="color: #0f4c75; margin: 30px 0 20px 0;">測試中的申請</h4>
                    <div class="table-container">
                        <table id="testingTable">
                            <thead>
                                <tr>
                                    <th>申請編號</th>
                                    <th>申請人</th>
                                    <th>測試階段</th>
                                    <th>測試結果</th>
                                    <th>開始時間</th>
                                    <th>操作</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- 核准流程 -->
            <div id="approval" class="tab-content">
                <div class="tab-pane">
                    <h3 style="margin-bottom: 30px; color: #0f4c75;">核准流程管理</h3>
                    
                    <div class="budget-alert budget-warning">
                        <span style="font-size: 24px;">⚡</span>
                        <div>
                            <strong>核准流程說明：</strong><br>
                            根據申請金額和部門設定，系統會自動分配對應的審核人員和流程。
                        </div>
                    </div>

                    <!-- 核准流程設定 -->
                    <div style="margin: 30px 0;">
                        <h4 style="color: #0f4c75; margin-bottom: 20px;">流程設定</h4>
                        <button class="btn btn-primary" onclick="showModal('approvalRuleModal')" style="margin-bottom: 20px;">
                            ⚙️ 設定核准規則
                        </button>
                        
                        <div class="table-container">
                            <table id="approvalRulesTable">
                                <thead>
                                    <tr>
                                        <th>金額範圍</th>
                                        <th>核准層級</th>
                                        <th>審核人員</th>
                                        <th>時限（天）</th>
                                        <th>操作</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>

                    <h4 style="color: #0f4c75; margin: 30px 0 20px 0;">待核准項目</h4>
                    <div class="table-container">
                        <table id="approvalTable">
                            <thead>
                                <tr>
                                    <th>申請日期</th>
                                    <th>申請人</th>
                                    <th>部門</th>
                                    <th>金額</th>
                                    <th>說明</th>
                                    <th>優先級</th>
                                    <th>狀態</th>
                                    <th>操作</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- 報表管理 -->
            <div id="report" class="tab-content">
                <div class="tab-pane">
                    <h3 style="margin-bottom: 30px; color: #0f4c75;">報表管理</h3>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="reportType">報表類型</label>
                            <select id="reportType">
                                <option value="expense">費用申請報表</option>
                                <option value="budget">預算執行報表</option>
                                <option value="department">部門費用報表</option>
                                <option value="approval">核准流程報表</option>
                                <option value="testing">測試結果報表</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="dateRange">報表期間</label>
                            <input type="month" id="dateRange">
                        </div>
                        <div class="form-group">
                            <label for="reportFormat">匯出格式</label>
                            <select id="reportFormat">
                                <option value="xlsx">Excel (.xlsx)</option>
                                <option value="csv">CSV (.csv)</option>
                                <option value="pdf">PDF (.pdf)</option>
                            </select>
                        </div>
                    </div>
                    
                    <div style="margin: 30px 0; display: flex; gap: 15px;">
                        <button class="btn btn-success" onclick="exportReport()">📊 匯出報表</button>
                        <button class="btn btn-info" onclick="importData()">📥 匯入資料</button>
                        <button class="btn btn-warning" onclick="scheduleReport()">⏰ 排程報表</button>
                    </div>
                    
                    <input type="file" id="importFile" accept=".csv,.xlsx,.xls" style="display: none;" onchange="handleImport(this.files[0])">
                    
                    <h4 style="color: #0f4c75; margin: 30px 0 20px 0;">報表預覽</h4>
                    <div id="reportPreview" style="background: #f8f9fa; padding: 30px; border-radius: 15px; min-height: 200px; text-align: center; color: #666;">
                        請選擇報表類型和期間後，點擊匯出報表按鈕
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- 會計科目模態框 -->
    <div id="accountModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">會計科目設定</h3>
                <span class="close" onclick="closeModal('accountModal')">&times;</span>
            </div>
            <form id="accountForm">
                <div class="form-row">
                    <div class="form-group">
                        <label for="accountCodeInput">科目代碼 *</label>
                        <input type="text" id="accountCodeInput" placeholder="例: 6201" required>
                    </div>
                    <div class="form-group">
                        <label for="accountNameInput">科目名稱 *</label>
                        <input type="text" id="accountNameInput" placeholder="例: 差旅費" required>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="budgetAmountInput">預算額度 (TWD) *</label>
                        <input type="number" id="budgetAmountInput" placeholder="0.00" min="0" step="0.01" required>
                    </div>
                    <div class="form-group">
                        <label for="accountCategoryInput">科目分類</label>
                        <select id="accountCategoryInput">
                            <option value="travel">差旅費用</option>
                            <option value="office">辦公費用</option>
                            <option value="meal">餐費</option>
                            <option value="training">培訓費用</option>
                            <option value="other">其他費用</option>
                        </select>
                    </div>
                </div>
                <button type="submit" class="btn btn-primary">💾 儲存</button>
            </form>
        </div>
    </div>

    <!-- 部門模態框 -->
    <div id="departmentModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">部門設定</h3>
                <span class="close" onclick="closeModal('departmentModal')">&times;</span>
            </div>
            <form id="departmentForm">
                <div class="form-row">
                    <div class="form-group">
                        <label for="deptCodeInput">部門代碼 *</label>
                        <input type="text" id="deptCodeInput" placeholder="例: IT" required>
                    </div>
                    <div class="form-group">
                        <label for="deptNameInput">部門名稱 *</label>
                        <input type="text" id="deptNameInput" placeholder="例: 資訊部" required>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="deptManagerInput">直接主管 *</label>
                        <input type="text" id="deptManagerInput" placeholder="例: 張經理" required>
                    </div>
                    <div class="form-group">
                        <label for="deptIndirectManagerInput">間接主管</label>
                        <input type="text" id="deptIndirectManagerInput" placeholder="例: 李副理 (可空白)">
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="deptBudgetInput">部門預算 (TWD) *</label>
                        <input type="number" id="deptBudgetInput" placeholder="0.00" min="0" step="0.01" required>
                    </div>
                </div>
                <div class="form-group">
                    <label for="deptDescInput">部門說明</label>
                    <textarea id="deptDescInput" rows="3" placeholder="部門職責和說明"></textarea>
                </div>
                <button type="submit" class="btn btn-primary">💾 儲存</button>
            </form>
        </div>
    </div>

    <!-- 使用者管理模態框 -->
    <div id="userModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">使用者設定</h3>
                <span class="close" onclick="closeModal('userModal')">&times;</span>
            </div>
            <form id="userForm">
                <div class="form-row">
                    <div class="form-group">
                        <label for="userUsernameInput">使用者帳號 *</label>
                        <input type="text" id="userUsernameInput" placeholder="例: john.doe" required pattern="[a-zA-Z0-9._]+" title="只能包含字母、數字、點號和底線">
                    </div>
                    <div class="form-group">
                        <label for="userFullNameInput">姓名 *</label>
                        <input type="text" id="userFullNameInput" placeholder="例: 王小明" required>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="userPasswordInput">密碼 *</label>
                        <input type="password" id="userPasswordInput" placeholder="至少8個字元" minlength="8" required>
                    </div>
                    <div class="form-group">
                        <label for="userConfirmPasswordInput">確認密碼 *</label>
                        <input type="password" id="userConfirmPasswordInput" placeholder="再次輸入密碼" minlength="8" required>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="userRoleInput">角色 *</label>
                        <select id="userRoleInput" required onchange="updateUserPermissions()">
                            <option value="">請選擇角色</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="userDepartmentInput">部門 *</label>
                        <select id="userDepartmentInput" required>
                            <option value="">請選擇部門</option>
                        </select>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="userEmailInput">電子郵件 *</label>
                        <input type="email" id="userEmailInput" placeholder="例: user@company.com" required>
                    </div>
                    <div class="form-group">
                        <label for="userPhoneInput">電話號碼</label>
                        <input type="tel" id="userPhoneInput" placeholder="例: 02-1234-5678">
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="userStatusInput">帳號狀態</label>
                        <select id="userStatusInput">
                            <option value="active">✅ 啟用</option>
                            <option value="inactive">⏸️ 停用</option>
                            <option value="locked">🔒 鎖定</option>
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label>角色權限預覽</label>
                    <div id="userPermissionsPreview" style="background: #f8f9fa; padding: 15px; border-radius: 8px; font-size: 14px; color: #666;">
                        請先選擇角色
                    </div>
                </div>
                <button type="submit" class="btn btn-primary">💾 儲存使用者</button>
            </form>
        </div>
    </div>

    <!-- 附件查看模態框 -->
    <div id="attachmentModal" class="modal">
        <div class="modal-content" style="max-width: 900px; max-height: 90vh;">
            <div class="modal-header">
                <h3 class="modal-title">📎 附件查看</h3>
                <span class="close" onclick="closeModal('attachmentModal')">&times;</span>
            </div>
            
            <div id="attachmentContent">
                <div style="margin-bottom: 20px;">
                    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px;">
                        <h4 id="attachmentExpenseInfo" style="color: #0f4c75;">申請資訊</h4>
                        <div>
                            <button class="btn btn-info" onclick="downloadAllAttachments()" style="margin-right: 10px;">📥 下載全部</button>
                            <button class="btn btn-success" onclick="quickApprove()" style="margin-right: 10px;">✅ 快速核准</button>
                            <button class="btn btn-danger" onclick="quickReject()">❌ 快速拒絕</button>
                        </div>
                    </div>
                    
                    <div id="attachmentSummary" style="background: #f8f9fa; padding: 15px; border-radius: 10px; margin-bottom: 20px;">
                        <!-- 申請摘要將在這裡顯示 -->
                    </div>
                </div>
                
                <div id="attachmentList">
                    <!-- 附件列表將在這裡動態載入 -->
                </div>
                
                <div id="noAttachments" style="text-align: center; padding: 40px; color: #666; display: none;">
                    <div style="font-size: 48px; margin-bottom: 15px;">📄</div>
                    <h4>此申請沒有上傳附件</h4>
                    <p>申請人未提供任何附件檔案</p>
                </div>
            </div>
        </div>
    </div>

    <!-- 附件預覽模態框 -->
    <div id="attachmentPreviewModal" class="modal">
        <div class="modal-content" style="max-width: 95vw; max-height: 95vh; padding: 20px;">
            <div class="modal-header">
                <h3 class="modal-title" id="previewFileName">檔案預覽</h3>
                <span class="close" onclick="closeModal('attachmentPreviewModal')">&times;</span>
            </div>
            
            <div id="previewContent" style="text-align: center; min-height: 400px; display: flex; align-items: center; justify-content: center;">
                <!-- 預覽內容將在這裡顯示 -->
            </div>
            
            <div style="text-align: center; margin-top: 20px;">
                <button class="btn btn-info" onclick="downloadCurrentFile()">📥 下載檔案</button>
                <button class="btn btn-secondary" onclick="closeModal('attachmentPreviewModal')">關閉</button>
            </div>
        </div>
    </div>
    <div id="roleModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">角色權限管理</h3>
                <span class="close" onclick="closeModal('roleModal')">&times;</span>
            </div>
            
            <div style="margin-bottom: 30px;">
                <h4 style="color: #0f4c75; margin-bottom: 15px;">系統角色設定</h4>
                <div id="rolesList" style="display: grid; gap: 15px;">
                    <!-- 角色列表將動態載入 -->
                </div>
            </div>
            
            <div>
                <h4 style="color: #0f4c75; margin-bottom: 15px;">新增自訂角色</h4>
                <form id="roleForm">
                    <div class="form-row">
                        <div class="form-group">
                            <label for="roleIdInput">角色代碼 *</label>
                            <input type="text" id="roleIdInput" placeholder="例: supervisor" required>
                        </div>
                        <div class="form-group">
                            <label for="roleNameInput">角色名稱 *</label>
                            <input type="text" id="roleNameInput" placeholder="例: 主管" required>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="roleIconInput">角色圖示</label>
                        <select id="roleIconInput">
                            <option value="👤">👤 使用者</option>
                            <option value="👥">👥 團隊</option>
                            <option value="👑">👑 管理者</option>
                            <option value="💼">💼 主管</option>
                            <option value="🛡️">🛡️ 安全</option>
                            <option value="🔧">🔧 技術</option>
                            <option value="📊">📊 分析</option>
                            <option value="💰">💰 財務</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label>權限設定</label>
                        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 10px; margin-top: 10px;">
                            <label style="display: flex; align-items: center; gap: 8px;">
                                <input type="checkbox" name="rolePermissions" value="all"> 完整權限
                            </label>
                            <label style="display: flex; align-items: center; gap: 8px;">
                                <input type="checkbox" name="rolePermissions" value="create"> 建立申請
                            </label>
                            <label style="display: flex; align-items: center; gap: 8px;">
                                <input type="checkbox" name="rolePermissions" value="view"> 檢視資料
                            </label>
                            <label style="display: flex; align-items: center; gap: 8px;">
                                <input type="checkbox" name="rolePermissions" value="approve"> 核准申請
                            </label>
                            <label style="display: flex; align-items: center; gap: 8px;">
                                <input type="checkbox" name="rolePermissions" value="budget"> 預算管理
                            </label>
                            <label style="display: flex; align-items: center; gap: 8px;">
                                <input type="checkbox" name="rolePermissions" value="testing"> 測試功能
                            </label>
                            <label style="display: flex; align-items: center; gap: 8px;">
                                <input type="checkbox" name="rolePermissions" value="account_manage"> 科目管理
                            </label>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="roleDescInput">角色說明</label>
                        <textarea id="roleDescInput" rows="2" placeholder="角色職責和權限說明"></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">➕ 新增角色</button>
                </form>
            </div>
        </div>
    </div>
    <div id="categoryModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">科目分類管理</h3>
                <span class="close" onclick="closeModal('categoryModal')">&times;</span>
            </div>
            
            <div style="margin-bottom: 30px;">
                <h4 style="color: #0f4c75; margin-bottom: 15px;">新增分類</h4>
                <form id="categoryForm">
                    <div class="form-row">
                        <div class="form-group">
                            <label for="categoryIdInput">分類代碼 *</label>
                            <input type="text" id="categoryIdInput" placeholder="例: tech" required>
                        </div>
                        <div class="form-group">
                            <label for="categoryNameInput">分類名稱 *</label>
                            <input type="text" id="categoryNameInput" placeholder="例: 技術費用" required>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="categoryIconInput">圖示</label>
                            <select id="categoryIconInput">
                                <option value="📊">📊 圖表分析</option>
                                <option value="💼">💼 商務公事</option>
                                <option value="🖥️">🖥️ 電腦設備</option>
                                <option value="📱">📱 行動裝置</option>
                                <option value="🔧">🔧 維修工具</option>
                                <option value="📚">📚 教育培訓</option>
                                <option value="🚗">🚗 交通運輸</option>
                                <option value="🏠">🏠 房屋租賃</option>
                                <option value="⚡">⚡ 水電能源</option>
                                <option value="🌐">🌐 網路通訊</option>
                                <option value="💰">💰 金融財務</option>
                                <option value="🛡️">🛡️ 保險安全</option>
                                <option value="⚖️">⚖️ 法律事務</option>
                                <option value="🎉">🎉 活動娛樂</option>
                                <option value="🏥">🏥 醫療健康</option>
                                <option value="🔬">🔬 研究開發</option>
                                <option value="📢">📢 行銷宣傳</option>
                                <option value="👨‍💼">👨‍💼 專業顧問</option>
                                <option value="🚛">🚛 物流運送</option>
                                <option value="🔒">🔒 資安防護</option>
                                <option value="📞">📞 通訊聯絡</option>
                                <option value="✈️">✈️ 差旅出差</option>
                                <option value="🍽️">🍽️ 餐飲用膳</option>
                                <option value="💻">💻 科技資訊</option>
                                <option value="📋">📋 其他雜項</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="categoryColorInput">顏色</label>
                            <select id="categoryColorInput">
                                <option value="#007bff" style="color: #007bff;">🔵 藍色</option>
                                <option value="#28a745" style="color: #28a745;">🟢 綠色</option>
                                <option value="#ffc107" style="color: #ffc107;">🟡 黃色</option>
                                <option value="#dc3545" style="color: #dc3545;">🔴 紅色</option>
                                <option value="#17a2b8" style="color: #17a2b8;">🟦 青色</option>
                                <option value="#6f42c1" style="color: #6f42c1;">🟣 紫色</option>
                                <option value="#fd7e14" style="color: #fd7e14;">🟠 橙色</option>
                                <option value="#e83e8c" style="color: #e83e8c;">🩷 粉色</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="categoryDescInput">分類說明</label>
                        <textarea id="categoryDescInput" rows="2" placeholder="分類用途說明"></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">➕ 新增分類</button>
                </form>
            </div>
            
            <div>
                <h4 style="color: #0f4c75; margin-bottom: 15px;">現有分類</h4>
                <div id="categoriesList" style="display: grid; gap: 15px;">
                    <!-- 分類列表將動態載入 -->
                </div>
            </div>
        </div>
    </div>
    <div id="approvalRuleModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">核准規則設定</h3>
                <span class="close" onclick="closeModal('approvalRuleModal')">&times;</span>
            </div>
            <form id="approvalRuleForm">
                <div class="form-row">
                    <div class="form-group">
                        <label for="minAmountInput">最小金額 (TWD)</label>
                        <input type="number" id="minAmountInput" placeholder="0.00" min="0" step="0.01" required>
                    </div>
                    <div class="form-group">
                        <label for="maxAmountInput">最大金額 (TWD)</label>
                        <input type="number" id="maxAmountInput" placeholder="99999999.99" min="0" step="0.01" required>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="approverInput">審核人員</label>
                        <input type="text" id="approverInput" placeholder="審核人員姓名" required>
                    </div>
                    <div class="form-group">
                        <label for="approvalLevelInput">核准層級</label>
                        <select id="approvalLevelInput" required>
                            <option value="1">第一層 - 部門主管</option>
                            <option value="2">第二層 - 部門經理</option>
                            <option value="3">第三層 - 總經理</option>
                        </select>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="timeLimitInput">審核時限（天）</label>
                        <input type="number" id="timeLimitInput" placeholder="3" min="1" max="30" required>
                    </div>
                    <div class="form-group">
                        <label for="autoEscalateInput">自動升級</label>
                        <select id="autoEscalateInput">
                            <option value="yes">是</option>
                            <option value="no">否</option>
                        </select>
                    </div>
                </div>
                <button type="submit" class="btn btn-primary">💾 儲存規則</button>
            </form>
        </div>
    </div>

    <script>
        // 全域變數
        let expenses = [];
        let accounts = [
            { code: '6201', name: '差旅費', budget: 120000, used: 25000, category: 'travel', description: '員工出差交通住宿費用', status: 'active' },
            { code: '6202', name: '市內交通費', budget: 45000, used: 15000, category: 'travel', description: '市內公務交通費用', status: 'active' },
            { code: '6203', name: '員工餐費', budget: 60000, used: 28000, category: 'meal', description: '員工工作餐點費用', status: 'active' },
            { code: '6204', name: '辦公用品', budget: 35000, used: 12000, category: 'office', description: '文具、紙張等辦公用品', status: 'active' },
            { code: '6205', name: '員工培訓', budget: 80000, used: 35000, category: 'training', description: '員工技能培訓課程費用', status: 'active' },
            { code: '6206', name: '廣告宣傳', budget: 150000, used: 95000, category: 'marketing', description: '廣告投放與宣傳費用', status: 'active' },
            { code: '6207', name: '設備維護', budget: 70000, used: 52000, category: 'maintenance', description: '辦公設備保養維修費用', status: 'active' },
            { code: '6208', name: '軟體授權', budget: 100000, used: 75000, category: 'technology', description: '軟體授權與雲端服務費用', status: 'active' },
            { code: '6209', name: '電話網路', budget: 40000, used: 18000, category: 'communication', description: '電話費與網路使用費', status: 'active' },
            { code: '6210', name: '水電費', budget: 90000, used: 45000, category: 'utilities', description: '辦公室水電瓦斯費用', status: 'active' },
            { code: '6211', name: '辦公室租金', budget: 300000, used: 150000, category: 'rent', description: '辦公空間租賃費用', status: 'active' },
            { code: '6212', name: '商業保險', budget: 50000, used: 25000, category: 'insurance', description: '企業責任險等保險費用', status: 'active' },
            { code: '6213', name: '法律服務', budget: 60000, used: 15000, category: 'legal', description: '法律諮詢與合約審查', status: 'active' },
            { code: '6214', name: '銀行手續費', budget: 25000, used: 8000, category: 'finance', description: '銀行轉帳與金融服務費', status: 'active' },
            { code: '6215', name: '管理顧問', budget: 120000, used: 40000, category: 'consulting', description: '外部顧問與專業服務', status: 'active' }
        ];
        
        let accountCategories = [
            { id: 'travel', name: '差旅費用', icon: '✈️', color: '#007bff', description: '員工出差、交通、住宿等相關費用' },
            { id: 'office', name: '辦公費用', icon: '🏢', color: '#28a745', description: '辦公室用品、文具、設備等費用' },
            { id: 'meal', name: '餐飲費用', icon: '🍽️', color: '#ffc107', description: '員工用餐、客戶招待、會議餐點等費用' },
            { id: 'training', name: '培訓費用', icon: '📚', color: '#17a2b8', description: '員工培訓、研習、證照考試等費用' },
            { id: 'marketing', name: '行銷費用', icon: '📢', color: '#fd7e14', description: '廣告宣傳、市場推廣、活動費用' },
            { id: 'maintenance', name: '維護費用', icon: '🔧', color: '#6f42c1', description: '設備保養、維修、清潔等費用' },
            { id: 'technology', name: '科技費用', icon: '💻', color: '#20c997', description: '軟體授權、雲端服務、IT設備等費用' },
            { id: 'communication', name: '通訊費用', icon: '📞', color: '#e83e8c', description: '電話費、網路費、郵寄費等通訊費用' },
            { id: 'utilities', name: '水電費用', icon: '⚡', color: '#fd7e14', description: '電費、水費、瓦斯費等公共事業費用' },
            { id: 'rent', name: '租賃費用', icon: '🏠', color: '#6c757d', description: '辦公室租金、設備租賃等費用' },
            { id: 'insurance', name: '保險費用', icon: '🛡️', color: '#dc3545', description: '商業保險、責任保險等費用' },
            { id: 'legal', name: '法律費用', icon: '⚖️', color: '#495057', description: '律師費、法律諮詢、合約審查等費用' },
            { id: 'finance', name: '財務費用', icon: '💰', color: '#ffc107', description: '銀行手續費、利息、會計服務等費用' },
            { id: 'consulting', name: '顧問費用', icon: '👨‍💼', color: '#6610f2', description: '管理顧問、專業諮詢等費用' },
            { id: 'research', name: '研發費用', icon: '🔬', color: '#20c997', description: '研究開發、實驗材料、專利申請等費用' },
            { id: 'entertainment', name: '娛樂費用', icon: '🎉', color: '#e83e8c', description: '員工聚餐、尾牙、團建活動等費用' },
            { id: 'medical', name: '醫療費用', icon: '🏥', color: '#dc3545', description: '員工健檢、急救用品、醫療保健等費用' },
            { id: 'transportation', name: '運輸費用', icon: '🚛', color: '#fd7e14', description: '貨運、快遞、物流等運輸費用' },
            { id: 'security', name: '安全費用', icon: '🔒', color: '#495057', description: '保全、監控系統、安全設備等費用' },
            { id: 'other', name: '其他費用', icon: '📋', color: '#6c757d', description: '其他未分類的零星費用' }
        ];
        
        let departments = [
            { code: 'IT', name: '資訊部', manager: '張經理', indirectManager: '李副理', budget: 200000, used: 45000, desc: '負責公司資訊系統開發與維護' },
            { code: 'HR', name: '人事部', manager: '李經理', indirectManager: '', budget: 150000, used: 30000, desc: '負責人力資源管理與招募' },
            { code: 'FIN', name: '財務部', manager: '王經理', indirectManager: '陳副理', budget: 100000, used: 25000, desc: '負責財務管理與會計作業' },
            { code: 'MKT', name: '行銷部', manager: '陳經理', indirectManager: '林副理', budget: 300000, used: 85000, desc: '負責市場行銷與品牌推廣' },
            { code: 'RD', name: '研發部', manager: '林經理', indirectManager: '黃副理', budget: 250000, used: 60000, desc: '負責產品研發與技術創新' }
        ];
        
        let approvalRules = [
            { minAmount: 0, maxAmount: 5000, level: 1, approver: '間接主管/直接主管', timeLimit: 2, autoEscalate: 'yes' },
            { minAmount: 5001, maxAmount: 20000, level: 2, approver: '直接主管', timeLimit: 3, autoEscalate: 'yes' },
            { minAmount: 20001, maxAmount: 999999999, level: 3, approver: '總經理', timeLimit: 5, autoEscalate: 'no' }
        ];
        
        // 測試帳號資料
        let testAccounts = [
            { 
                username: 'admin', 
                password: 'admin123', 
                role: '系統管理員', 
                department: 'IT', 
                permissions: ['all'],
                fullName: '系統管理員',
                email: 'admin@company.com',
                phone: '02-1234-5678',
                status: 'active',
                lastLogin: '2024-01-20 09:00:00',
                createdDate: '2024-01-01',
                createdBy: 'system'
            },
            { 
                username: 'manager', 
                password: 'manager123', 
                role: '部門經理', 
                department: 'IT', 
                permissions: ['approve', 'view', 'create'],
                fullName: '張經理',
                email: 'manager@company.com',
                phone: '02-1234-5679',
                status: 'active',
                lastLogin: '2024-01-20 08:30:00',
                createdDate: '2024-01-01',
                createdBy: 'admin'
            },
            { 
                username: 'user01', 
                password: 'user123', 
                role: '一般員工', 
                department: 'IT', 
                permissions: ['create', 'view'],
                fullName: '王小明',
                email: 'user01@company.com',
                phone: '02-1234-5680',
                status: 'active',
                lastLogin: '2024-01-19 17:45:00',
                createdDate: '2024-01-05',
                createdBy: 'admin'
            },
            { 
                username: 'finance', 
                password: 'finance123', 
                role: '財務人員', 
                department: 'FIN', 
                permissions: ['budget', 'view', 'approve'],
                fullName: '陳會計',
                email: 'finance@company.com',
                phone: '02-1234-5681',
                status: 'active',
                lastLogin: '2024-01-20 08:15:00',
                createdDate: '2024-01-01',
                createdBy: 'admin'
            },
            { 
                username: 'hr', 
                password: 'hr123', 
                role: '一般員工', 
                department: 'HR', 
                permissions: ['create', 'view'],
                fullName: '李小華',
                email: 'hr@company.com',
                phone: '02-1234-5682',
                status: 'active',
                lastLogin: '2024-01-19 16:20:00',
                createdDate: '2024-01-10',
                createdBy: 'admin'
            },
            { 
                username: 'marketing', 
                password: 'mkt123', 
                role: '一般員工', 
                department: 'MKT', 
                permissions: ['create', 'view'],
                fullName: '林行銷',
                email: 'marketing@company.com',
                phone: '02-1234-5683',
                status: 'active',
                lastLogin: '2024-01-18 18:30:00',
                createdDate: '2024-01-15',
                createdBy: 'manager'
            },
            { 
                username: 'rd', 
                password: 'rd123', 
                role: '一般員工', 
                department: 'RD', 
                permissions: ['create', 'view'],
                fullName: '黃工程師',
                email: 'rd@company.com',
                phone: '02-1234-5684',
                status: 'active',
                lastLogin: '2024-01-20 07:45:00',
                createdDate: '2024-01-12',
                createdBy: 'admin'
            },
            { 
                username: 'ceo', 
                password: 'ceo123', 
                role: '總經理', 
                department: 'CEO', 
                permissions: ['all'],
                fullName: '董總經理',
                email: 'ceo@company.com',
                phone: '02-1234-5685',
                status: 'active',
                lastLogin: '2024-01-19 09:15:00',
                createdDate: '2024-01-01',
                createdBy: 'system'
            },
            { 
                username: 'test', 
                password: 'test123', 
                role: '測試人員', 
                department: 'IT', 
                permissions: ['testing', 'view'],
                fullName: '測試人員',
                email: 'test@company.com',
                phone: '02-1234-5686',
                status: 'active',
                lastLogin: '2024-01-20 10:30:00',
                createdDate: '2024-01-08',
                createdBy: 'admin'
            },
            { 
                username: 'disabled_user', 
                password: 'disabled123', 
                role: '一般員工', 
                department: 'IT', 
                permissions: ['create', 'view'],
                fullName: '已停用使用者',
                email: 'disabled@company.com',
                phone: '02-1234-5687',
                status: 'inactive',
                lastLogin: '2024-01-10 15:20:00',
                createdDate: '2024-01-01',
                createdBy: 'admin'
            }
        ];
        
        let userRoles = [
            {
                id: 'admin',
                name: '系統管理員',
                icon: '👑',
                permissions: ['all'],
                description: '擁有系統完整權限，可管理所有功能'
            },
            {
                id: 'manager',
                name: '部門經理',
                icon: '👤',
                permissions: ['approve', 'view', 'create', 'budget'],
                description: '可審核申請、管理部門預算、檢視報表'
            },
            {
                id: 'finance',
                name: '財務人員',
                icon: '💰',
                permissions: ['budget', 'view', 'approve', 'account_manage'],
                description: '管理預算、會計科目、審核財務相關申請'
            },
            {
                id: 'ceo',
                name: '總經理',
                icon: '🏆',
                permissions: ['all'],
                description: '最高決策者，擁有完整系統權限'
            },
            {
                id: 'tester',
                name: '測試人員',
                icon: '🧪',
                permissions: ['testing', 'view'],
                description: '負責系統測試、流程驗證'
            },
            {
                id: 'employee',
                name: '一般員工',
                icon: '👷',
                permissions: ['create', 'view'],
                description: '可提交費用申請、檢視個人記錄'
            }
        ];
        
        let uploadedFiles = [];
        let currentUser = '';
        let currentUserRole = '';
        let currentUserDept = '';
        let currentUserPermissions = [];
        let currentAttachmentExpenseId = null; // 當前查看附件的申請ID

        // 快速登入功能
        function quickLogin(username, password) {
            document.getElementById('username').value = username;
            document.getElementById('password').value = password;
            document.getElementById('loginForm').dispatchEvent(new Event('submit'));
        }

        // 登入功能
        document.getElementById('loginForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const username = document.getElementById('username').value.trim();
            const password = document.getElementById('password').value.trim();
            
            console.log('嘗試登入:', username, password); // 除錯用
            
            // 檢查測試帳號
            const testAccount = testAccounts.find(acc => 
                acc.username.toLowerCase() === username.toLowerCase() && 
                acc.password === password
            );
            
            console.log('找到測試帳號:', testAccount); // 除錯用
            
            if (testAccount) {
                currentUser = testAccount.username;
                currentUserRole = testAccount.role;
                currentUserDept = testAccount.department;
                currentUserPermissions = testAccount.permissions;
                
                console.log('設定使用者資料:', currentUser, currentUserRole); // 除錯用
                
                document.getElementById('loginContainer').style.display = 'none';
                document.getElementById('mainInterface').style.display = 'block';
                document.getElementById('currentUser').innerHTML = `
                    <div style="text-align: right;">
                        <div style="font-weight: 700; color: #0f4c75;">${testAccount.username}</div>
                        <div style="font-size: 12px; color: #666;">${testAccount.role} - ${testAccount.department}</div>
                    </div>
                `;
                
                try {
                    initializeSystem();
                    
                    // 確保儀表板標籤被激活
                    document.querySelectorAll('.nav-tab').forEach(tab => {
                        tab.classList.remove('active');
                    });
                    document.querySelectorAll('.tab-content').forEach(content => {
                        content.style.display = 'none';
                    });
                    document.querySelectorAll('.tab-pane').forEach(pane => {
                        pane.classList.remove('active');
                    });
                    
                    // 顯示儀表板
                    document.getElementById('dashboard').style.display = 'block';
                    document.querySelector('#dashboard .tab-pane').classList.add('active');
                    document.querySelector('[onclick="showTab(\'dashboard\')"]').classList.add('active');
                    
                    // 根據權限顯示功能
                    applyPermissions();
                    
                    // 顯示歡迎訊息
                    setTimeout(() => {
                        alert(`歡迎 ${testAccount.role} ${username}！\n部門：${testAccount.department}\n\n可用功能：${getPermissionDescription(testAccount.permissions)}`);
                    }, 500);
                    
                } catch(error) {
                    console.error('初始化錯誤:', error);
                    alert('系統初始化失敗，請重新整理頁面');
                }
                
            } else if (username && password) {
                // 一般帳號（原有邏輯）
                currentUser = username;
                currentUserRole = '一般使用者';
                currentUserDept = 'IT';
                currentUserPermissions = ['create', 'view'];
                
                document.getElementById('loginContainer').style.display = 'none';
                document.getElementById('mainInterface').style.display = 'block';
                document.getElementById('currentUser').innerHTML = `
                    <div style="text-align: right;">
                        <div style="font-weight: 700; color: #0f4c75;">${username}</div>
                        <div style="font-size: 12px; color: #666;">一般使用者 - IT</div>
                    </div>
                `;
                
                try {
                    initializeSystem();
                    
                    // 顯示儀表板
                    document.getElementById('dashboard').style.display = 'block';
                    document.querySelector('#dashboard .tab-pane').classList.add('active');
                    document.querySelector('[onclick="showTab(\'dashboard\')"]').classList.add('active');
                    
                } catch(error) {
                    console.error('初始化錯誤:', error);
                    alert('系統初始化失敗，請重新整理頁面');
                }
            } else {
                alert('請輸入帳號和密碼！\n\n💡 測試帳號參考：\n• admin / admin123 (系統管理員)\n• manager / manager123 (部門經理)\n• user01 / user123 (一般員工)\n• finance / finance123 (財務人員)\n• test / test123 (測試人員)');
            }
        });

        // 登出功能
        function logout() {
            if (confirm('確定要登出嗎？')) {
                document.getElementById('loginContainer').style.display = 'flex';
                document.getElementById('mainInterface').style.display = 'none';
                document.getElementById('loginForm').reset();
                currentUser = '';
                currentUserRole = '';
                currentUserDept = '';
                currentUserPermissions = [];
                
                // 重置權限顯示
                resetPermissions();
            }
        }

        // 權限管理功能
        function applyPermissions() {
            const navTabs = document.querySelectorAll('.nav-tab');
            
            // 隱藏所有標籤
            navTabs.forEach(tab => {
                tab.style.display = 'none';
            });
            
            // 根據權限顯示標籤
            if (hasPermission('all') || hasPermission('view')) {
                document.querySelector('[onclick="showTab(\'dashboard\')"]').style.display = 'block';
            }
            
            if (hasPermission('all') || hasPermission('create')) {
                document.querySelector('[onclick="showTab(\'expense\')"]').style.display = 'block';
            }
            
            if (hasPermission('all') || currentUserRole === '系統管理員' || currentUserRole === '財務人員') {
                document.querySelector('[onclick="showTab(\'account\')"]').style.display = 'block';
                document.querySelector('[onclick="showTab(\'department\')"]').style.display = 'block';
            }
            
            if (hasPermission('all') || hasPermission('budget') || currentUserRole === '財務人員') {
                document.querySelector('[onclick="showTab(\'budget\')"]').style.display = 'block';
            }
            
            if (hasPermission('all') || hasPermission('testing') || currentUserRole === '測試人員') {
                document.querySelector('[onclick="showTab(\'testing\')"]').style.display = 'block';
            }
            
            if (hasPermission('all') || hasPermission('approve') || currentUserRole === '部門經理' || currentUserRole === '總經理') {
                document.querySelector('[onclick="showTab(\'approval\')"]').style.display = 'block';
            }
            
            if (hasPermission('all') || currentUserRole === '系統管理員' || currentUserRole === '財務人員') {
                document.querySelector('[onclick="showTab(\'report\')"]').style.display = 'block';
            }
        }

        function resetPermissions() {
            const navTabs = document.querySelectorAll('.nav-tab');
            navTabs.forEach(tab => {
                tab.style.display = 'block';
            });
        }

        function hasPermission(permission) {
            return currentUserPermissions.includes(permission);
        }

        function getPermissionDescription(permissions) {
            const permissionMap = {
                'all': '完整權限',
                'create': '建立申請',
                'view': '檢視資料',
                'approve': '核准申請',
                'budget': '預算管理',
                'testing': '測試功能'
            };
            
            if (permissions.includes('all')) {
                return '完整系統權限';
            }
            
            return permissions.map(p => permissionMap[p] || p).join('、');
        }

        // 系統初始化
        function initializeSystem() {
            console.log('開始初始化系統...'); // 除錯用
            
            try {
                loadAccounts();
                console.log('會計科目載入完成');
                
                loadDepartments();
                console.log('部門資料載入完成');
                
                loadExpenses();
                console.log('費用記錄載入完成');
                
                loadBudgetOverview();
                console.log('預算總覽載入完成');
                
                loadApprovalRules();
                console.log('核准規則載入完成');
                
                updateDashboard();
                console.log('儀表板更新完成');
                
                updateLastUpdate();
                console.log('時間更新完成');
                
                // 添加一些示例數據
                if (expenses.length === 0) {
                    expenses = [
                        {
                            id: 1001,
                            date: '2024-01-15',
                            applicant: '王小明',
                            applicantDept: 'IT',
                            accountCode: '6201',
                            salesAmount: 4762,
                            taxRate: 5,
                            inputTax: 238,
                            amount: 5000,
                            description: '台北出差交通費',
                            status: 'approved',
                            files: [
                                {
                                    name: '出差申請單.pdf',
                                    size: 245760,
                                    type: 'application/pdf',
                                    uploadDate: '2024-01-15T08:30:00.000Z'
                                },
                                {
                                    name: '交通費收據.jpg',
                                    size: 156432,
                                    type: 'image/jpeg',
                                    uploadDate: '2024-01-15T08:35:00.000Z'
                                }
                            ]
                        },
                        {
                            id: 1002,
                            date: '2024-01-16',
                            applicant: '李小華',
                            applicantDept: 'MKT',
                            accountCode: '6203',
                            salesAmount: 1143,
                            taxRate: 5,
                            inputTax: 57,
                            amount: 1200,
                            description: '客戶拜訪餐費',
                            status: 'pending',
                            files: [
                                {
                                    name: '餐廳發票.pdf',
                                    size: 187392,
                                    type: 'application/pdf',
                                    uploadDate: '2024-01-16T12:15:00.000Z'
                                },
                                {
                                    name: '客戶會議記錄.docx',
                                    size: 98304,
                                    type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
                                    uploadDate: '2024-01-16T12:20:00.000Z'
                                }
                            ]
                        },
                        {
                            id: 1003,
                            date: '2024-01-17',
                            applicant: currentUser,
                            applicantDept: currentUserDept,
                            accountCode: '6204',
                            salesAmount: 762,
                            taxRate: 5,
                            inputTax: 38,
                            amount: 800,
                            description: '辦公用品採購',
                            status: 'testing',
                            files: [
                                {
                                    name: '採購清單.xlsx',
                                    size: 45123,
                                    type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
                                    uploadDate: '2024-01-17T14:30:00.000Z'
                                }
                            ]
                        }
                    ];
                    console.log('示例資料已新增');
                }
                
                console.log('系統初始化完成！');
            } catch(error) {
                console.error('系統初始化失敗:', error);
                throw error;
            }
        }

        // 更新儀表板
        function updateDashboard() {
            document.getElementById('totalExpenses').textContent = expenses.length;
            document.getElementById('pendingExpenses').textContent = expenses.filter(e => e.status === 'pending').length;
            document.getElementById('approvedExpenses').textContent = expenses.filter(e => e.status === 'approved').length;
            
            const currentMonth = new Date().getMonth();
            const monthlyTotal = expenses
                .filter(e => new Date(e.date).getMonth() === currentMonth && e.status === 'approved')
                .reduce((sum, e) => sum + e.amount, 0);
            document.getElementById('monthlySpending').textContent = `${monthlyTotal.toLocaleString()}`;
        }

        // 更新最後更新時間
        function updateLastUpdate() {
            document.getElementById('lastUpdate').textContent = new Date().toLocaleString('zh-TW');
        }

        // 標籤切換
        function showTab(tabName) {
            console.log('切換到標籤:', tabName); // 除錯用
            
            try {
                // 隱藏所有標籤內容
                document.querySelectorAll('.tab-content').forEach(content => {
                    content.style.display = 'none';
                });
                
                document.querySelectorAll('.tab-pane').forEach(pane => {
                    pane.classList.remove('active');
                });
                
                // 移除所有活躍標籤
                document.querySelectorAll('.nav-tab').forEach(tab => {
                    tab.classList.remove('active');
                });
                
                // 顯示選中的標籤
                const targetTab = document.getElementById(tabName);
                const targetPane = document.querySelector(`#${tabName} .tab-pane`);
                const targetNavTab = document.querySelector(`[onclick="showTab('${tabName}')"]`);
                
                if (targetTab) {
                    targetTab.style.display = 'block';
                }
                if (targetPane) {
                    targetPane.classList.add('active');
                }
                if (targetNavTab) {
                    targetNavTab.classList.add('active');
                }
                
                // 根據標籤載入對應數據
                switch(tabName) {
                    case 'dashboard':
                        updateDashboard();
                        break;
                    case 'expense':
                        loadExpenses();
                        break;
                    case 'testing':
                        loadTestingItems();
                        break;
                    case 'approval':
                        loadApprovalItems();
                        break;
                }
            } catch(error) {
                console.error('標籤切換錯誤:', error);
            }
        }

        // 載入會計科目
        function loadAccounts() {
            const accountSelect = document.getElementById('accountCode');
            accountSelect.innerHTML = '<option value="">請選擇會計科目</option>';
            
            accounts.forEach(account => {
                const option = document.createElement('option');
                option.value = account.code;
                option.textContent = `${account.code} - ${account.name}`;
                accountSelect.appendChild(option);
            });

            const tbody = document.getElementById('accountTable').getElementsByTagName('tbody')[0];
            tbody.innerHTML = '';
            
            accounts.forEach(account => {
                const row = tbody.insertRow();
                const usagePercent = ((account.used / account.budget) * 100).toFixed(1);
                const progressColor = usagePercent > 90 ? '#dc3545' : usagePercent > 80 ? '#ffc107' : '#28a745';
                
                row.innerHTML = `
                    <td><strong>${account.code}</strong></td>
                    <td>${account.name}</td>
                    <td>${account.budget.toLocaleString()}</td>
                    <td>${account.used.toLocaleString()}</td>
                    <td>
                        <div style="display: flex; align-items: center; gap: 10px;">
                            <div class="progress-bar" style="flex: 1;">
                                <div class="progress-fill" style="width: ${Math.min(usagePercent, 100)}%; background: ${progressColor};"></div>
                            </div>
                            <span style="font-weight: 600;">${usagePercent}%</span>
                        </div>
                    </td>
                    <td>
                        <button class="btn btn-warning" onclick="editAccount('${account.code}')" style="padding: 8px 15px; margin-right: 5px;">✏️ 修改</button>
                        <button class="btn btn-danger" onclick="deleteAccount('${account.code}')" style="padding: 8px 15px;">🗑️ 刪除</button>
                    </td>
                `;
            });
        }

        // 載入部門
        function loadDepartments() {
            const deptSelects = [
                document.getElementById('applicantDept'),
                document.getElementById('onBehalfOfDept')
            ];
            
            deptSelects.forEach(select => {
                select.innerHTML = '<option value="">請選擇部門</option>';
                departments.forEach(dept => {
                    const option = document.createElement('option');
                    option.value = dept.code;
                    option.textContent = `${dept.code} - ${dept.name}`;
                    select.appendChild(option);
                });
            });

            const tbody = document.getElementById('departmentTable').getElementsByTagName('tbody')[0];
            tbody.innerHTML = '';
            
            departments.forEach(dept => {
                const row = tbody.insertRow();
                row.innerHTML = `
                    <td><strong>${dept.code}</strong></td>
                    <td>${dept.name}</td>
                    <td>${dept.manager}</td>
                    <td>${dept.budget.toLocaleString()}</td>
                    <td>${(dept.used || 0).toLocaleString()}</td>
                    <td>
                        <button class="btn btn-warning" onclick="editDepartment('${dept.code}')" style="padding: 8px 15px; margin-right: 5px;">✏️ 修改</button>
                        <button class="btn btn-danger" onclick="deleteDepartment('${dept.code}')" style="padding: 8px 15px;">🗑️ 刪除</button>
                    </td>
                `;
            });
        }

        // 載入費用申請
        function loadExpenses() {
            const tbody = document.getElementById('expenseTable').getElementsByTagName('tbody')[0];
            tbody.innerHTML = '';
            
            expenses.forEach((expense, index) => {
                const row = tbody.insertRow();
                const statusClass = `status-${expense.status}`;
                const statusText = {
                    'draft': '草稿',
                    'testing': '測試中',
                    'pending': '待審核',
                    'approved': '已核准',
                    'rejected': '已拒絕'
                };
                
                const workflowProgress = getWorkflowProgress(expense.status);
                
                row.innerHTML = `
                    <td>${expense.date}</td>
                    <td>${expense.applicant}</td>
                    <td>${expense.accountCode}</td>
                    <td>${expense.amount.toLocaleString()}</td>
                    <td><span class="status-badge ${statusClass}">${statusText[expense.status]}</span></td>
                    <td>
                        <div class="progress-bar">
                            <div class="progress-fill" style="width: ${workflowProgress}%; background: linear-gradient(90deg, #0f4c75, #3282b8);"></div>
                        </div>
                        <small style="color: #666;">${workflowProgress}% 完成</small>
                    </td>
                    <td>
                        <button class="btn btn-info" onclick="viewExpense(${index})" style="padding: 6px 12px; margin-right: 5px;">👁️ 檢視</button>
                        <button class="btn btn-warning" onclick="viewAttachments(${expenses[index].id})" style="padding: 6px 12px; margin-right: 5px;">📎 附件</button>
                        ${expense.status === 'draft' ? `<button class="btn btn-warning" onclick="editExpense(${index})" style="padding: 6px 12px;">✏️ 修改</button>` : ''}
                    </td>
                `;
            });

            loadApprovalItems();
        }

        // 取得工作流程進度
        function getWorkflowProgress(status) {
            switch(status) {
                case 'draft': return 25;
                case 'testing': return 50;
                case 'pending': return 75;
                case 'approved': return 100;
                case 'rejected': return 100;
                default: return 0;
            }
        }

        // 載入預算總覽
        function loadBudgetOverview() {
            const container = document.getElementById('budgetOverview');
            let html = '<div class="dashboard-cards">';
            
            accounts.forEach(account => {
                const usagePercent = (account.used / account.budget) * 100;
                const remaining = account.budget - account.used;
                const cardClass = usagePercent > 90 ? 'danger' : 
                                 usagePercent > 80 ? 'warning' : 'success';
                
                html += `
                    <div class="dashboard-card ${cardClass}">
                        <div class="card-header">
                            <span class="card-title">${account.name} (${account.code})</span>
                            <span style="font-size: 24px;">${usagePercent > 90 ? '🚨' : usagePercent > 80 ? '⚠️' : '✅'}</span>
                        </div>
                        <div style="margin-bottom: 15px;">
                            <div style="font-size: 14px; color: #666; margin-bottom: 5px;">預算額度</div>
                            <div style="font-size: 20px; font-weight: 600;">${account.budget.toLocaleString()}</div>
                        </div>
                        <div style="margin-bottom: 15px;">
                            <div style="font-size: 14px; color: #666; margin-bottom: 5px;">已使用</div>
                            <div style="font-size: 18px; font-weight: 600; color: ${usagePercent > 90 ? '#dc3545' : '#0f4c75'};">${account.used.toLocaleString()}</div>
                        </div>
                        <div style="margin-bottom: 15px;">
                            <div style="font-size: 14px; color: #666; margin-bottom: 5px;">剩餘額度</div>
                            <div style="font-size: 18px; font-weight: 600; color: #28a745;">${remaining.toLocaleString()}</div>
                        </div>
                        <div class="progress-bar">
                            <div class="progress-fill" style="width: ${Math.min(usagePercent, 100)}%; background: ${usagePercent > 90 ? '#dc3545' : usagePercent > 80 ? '#ffc107' : '#28a745'};"></div>
                        </div>
                        <div style="text-align: center; margin-top: 10px; font-weight: 600;">使用率: ${usagePercent.toFixed(1)}%</div>
                    </div>
                `;
            });
            
            html += '</div>';
            container.innerHTML = html;
        }

        // 載入核准規則
        function loadApprovalRules() {
            const tbody = document.getElementById('approvalRulesTable').getElementsByTagName('tbody')[0];
            tbody.innerHTML = '';
            
            approvalRules.forEach((rule, index) => {
                const row = tbody.insertRow();
                row.innerHTML = `
                    <td>${rule.minAmount.toLocaleString()} - ${rule.maxAmount.toLocaleString()}</td>
                    <td>第 ${rule.level} 層</td>
                    <td>${rule.approver}</td>
                    <td>${rule.timeLimit} 天</td>
                    <td>
                        <button class="btn btn-warning" onclick="editApprovalRule(${index})" style="padding: 6px 12px; margin-right: 5px;">✏️ 修改</button>
                        <button class="btn btn-danger" onclick="deleteApprovalRule(${index})" style="padding: 6px 12px;">🗑️ 刪除</button>
                    </td>
                `;
            });
        }

        // 載入測試項目
        function loadTestingItems() {
            const tbody = document.getElementById('testingTable').getElementsByTagName('tbody')[0];
            tbody.innerHTML = '';
            
            const testingExpenses = expenses.filter(expense => expense.status === 'testing');
            
            testingExpenses.forEach(expense => {
                const row = tbody.insertRow();
                row.innerHTML = `
                    <td>#${expense.id}</td>
                    <td>${expense.applicant}</td>
                    <td>預算驗證</td>
                    <td><span class="status-badge status-testing">進行中</span></td>
                    <td>${new Date().toLocaleString('zh-TW')}</td>
                    <td>
                        <button class="btn btn-success" onclick="completeTest(${expense.id})" style="padding: 6px 12px; margin-right: 5px;">✅ 完成測試</button>
                        <button class="btn btn-danger" onclick="failTest(${expense.id})" style="padding: 6px 12px;">❌ 測試失敗</button>
                    </td>
                `;
            });
        }

        // 載入核准項目
        function loadApprovalItems() {
            const tbody = document.getElementById('approvalTable').getElementsByTagName('tbody')[0];
            tbody.innerHTML = '';
            
            const pendingExpenses = expenses.filter(expense => expense.status === 'pending');
            
            pendingExpenses.forEach(expense => {
                const row = tbody.insertRow();
                const priority = expense.amount > 20000 ? '高' : expense.amount > 5000 ? '中' : '低';
                const priorityClass = expense.amount > 20000 ? 'danger' : expense.amount > 5000 ? 'warning' : 'success';
                
                row.innerHTML = `
                    <td>${expense.date}</td>
                    <td>${expense.applicant}</td>
                    <td>${expense.applicantDept}</td>
                    <td>${expense.amount.toLocaleString()}</td>
                    <td>${expense.description}</td>
                    <td><span class="status-badge status-${priorityClass}">${priority}</span></td>
                    <td><span class="status-badge status-pending">待核准</span></td>
                    <td>
                        <button class="btn btn-success" onclick="approveExpense(${expense.id})" style="padding: 6px 12px; margin-right: 5px;">✅ 核准</button>
                        <button class="btn btn-danger" onclick="rejectExpense(${expense.id})" style="padding: 6px 12px; margin-right: 5px;">❌ 拒絕</button>
                        <button class="btn btn-info" onclick="viewExpenseDetail(${expense.id})" style="padding: 6px 12px;">👁️ 詳情</button>
                    </td>
                `;
            });
        }

        // 費用申請表單提交
        document.getElementById('expenseForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const expense = {
                id: Date.now(),
                date: new Date().toLocaleDateString('zh-TW'),
                applicant: formData.get('applicant'),
                applicantDept: formData.get('applicantDept'),
                onBehalfOf: formData.get('onBehalfOf'),
                onBehalfOfDept: formData.get('onBehalfOfDept'),
                accountCode: formData.get('accountCode'),
                amount: parseFloat(formData.get('amount')),
                invoiceNumber: formData.get('invoiceNumber'),
                taxId: formData.get('taxId'),
                description: formData.get('description'),
                status: 'testing',
                files: [...uploadedFiles],
                submittedBy: currentUser,
                submittedAt: new Date().toISOString()
            };
            
            // 檢查預算
            if (!checkBudget(expense.accountCode, expense.amount)) {
                return;
            }
            
            expenses.push(expense);
            updateAccountUsage(expense.accountCode, expense.amount);
            
            // 更新工作流程指示器
            updateWorkflowIndicator(2);
            
            setTimeout(() => {
                updateWorkflowIndicator(3);
                expense.status = 'pending';
                loadExpenses();
                loadTestingItems();
                updateDashboard();
                alert('費用申請已提交並通過測試，進入核准流程！');
            }, 2000);
            
            loadExpenses();
            loadBudgetOverview();
            this.reset();
            uploadedFiles = [];
            document.getElementById('fileList').innerHTML = '';
            document.getElementById('budgetAlert').innerHTML = '';
            
            alert('費用申請已提交，正在進行測試流程...');
        });

        // 更新工作流程指示器
        function updateWorkflowIndicator(step) {
            const steps = document.querySelectorAll('.workflow-step');
            steps.forEach((stepEl, index) => {
                stepEl.classList.remove('active', 'completed');
                if (index + 1 < step) {
                    stepEl.classList.add('completed');
                } else if (index + 1 === step) {
                    stepEl.classList.add('active');
                }
            });
        }

        // 預算檢查
        function checkBudget(accountCode, amount) {
            const account = accounts.find(acc => acc.code === accountCode);
            if (!account) return false;
            
            const newUsage = account.used + amount;
            const usagePercent = (newUsage / account.budget) * 100;
            
            const alertDiv = document.getElementById('budgetAlert');
            
            if (usagePercent > 100) {
                alertDiv.innerHTML = `
                    <div class="budget-alert budget-danger">
                        <span style="font-size: 24px;">🚨</span>
                        <div>
                            <strong>預算超支警告！</strong><br>
                            此申請將使 ${account.name} 超出預算額度 ${(usagePercent - 100).toFixed(1)}%<br>
                            請調整申請金額或聯繫財務部門。
                        </div>
                    </div>
                `;
                return false;
            } else if (usagePercent > 90) {
                alertDiv.innerHTML = `
                    <div class="budget-alert budget-warning">
                        <span style="font-size: 24px;">⚠️</span>
                        <div>
                            <strong>預算警告！</strong><br>
                            此申請將使 ${account.name} 使用率達到 ${usagePercent.toFixed(1)}%<br>
                            建議謹慎控制後續支出。
                        </div>
                    </div>
                `;
            } else {
                alertDiv.innerHTML = `
                    <div class="budget-alert budget-success">
                        <span style="font-size: 24px;">✅</span>
                        <div>
                            <strong>預算檢查通過！</strong><br>
                            申請後 ${account.name} 使用率將為 ${usagePercent.toFixed(1)}%
                        </div>
                    </div>
                `;
            }
            
            return true;
        }

        // 稅務計算功能
        function calculateTotal() {
            const salesAmount = parseFloat(document.getElementById('salesAmount').value) || 0;
            const taxRate = parseFloat(document.getElementById('taxRate').value) || 0;
            
            // 計算進項稅額
            const inputTax = salesAmount * (taxRate / 100);
            
            // 計算總計金額
            const totalAmount = salesAmount + inputTax;
            
            // 更新欄位
            document.getElementById('inputTax').value = inputTax.toFixed(2);
            document.getElementById('amount').value = totalAmount.toFixed(2);
            
            // 更新顯示明細
            document.getElementById('displaySalesAmount').textContent = `${salesAmount.toLocaleString()}`;
            document.getElementById('displayInputTax').textContent = `${inputTax.toLocaleString()}`;
            document.getElementById('displayTaxRate').textContent = `${taxRate}%`;
            document.getElementById('displayTotalAmount').textContent = `${totalAmount.toLocaleString()}`;
            
            // 如果有選擇會計科目，檢查預算
            const accountCode = document.getElementById('accountCode').value;
            if (accountCode && totalAmount > 0) {
                checkBudget(accountCode, totalAmount);
            }
        }

        // 更新稅率
        function updateTaxRate() {
            const taxType = document.getElementById('taxType').value;
            const taxRateInput = document.getElementById('taxRate');
            
            if (taxType === 'custom') {
                taxRateInput.readOnly = false;
                taxRateInput.style.background = 'white';
                taxRateInput.focus();
            } else {
                taxRateInput.readOnly = true;
                taxRateInput.style.background = '#f8f9fa';
                taxRateInput.value = taxType;
            }
            
            calculateTotal();
        }

        // 修改預算檢查函數
        function checkBudgetOnChange() {
            const accountCode = document.getElementById('accountCode').value;
            const amount = parseFloat(document.getElementById('amount').value) || 0;
            
            if (accountCode && amount > 0) {
                checkBudget(accountCode, amount);
            } else {
                document.getElementById('budgetAlert').innerHTML = '';
            }
        }

        // 更新會計科目使用額度
        function updateAccountUsage(accountCode, amount) {
            const account = accounts.find(acc => acc.code === accountCode);
            if (account) {
                account.used += amount;
            }
        }

        // 儲存草稿
        function saveDraft() {
            const form = document.getElementById('expenseForm');
            const formData = new FormData(form);
            
                const expense = {
                id: Date.now(),
                date: new Date().toLocaleDateString('zh-TW'),
                applicant: formData.get('applicant'),
                applicantDept: formData.get('applicantDept'),
                onBehalfOf: formData.get('onBehalfOf'),
                onBehalfOfDept: formData.get('onBehalfOfDept'),
                accountCode: formData.get('accountCode'),
                salesAmount: parseFloat(formData.get('salesAmount')) || 0,
                taxRate: parseFloat(formData.get('taxRate')) || 0,
                inputTax: parseFloat(formData.get('inputTax')) || 0,
                amount: parseFloat(formData.get('amount')) || 0,
                invoiceNumber: formData.get('invoiceNumber'),
                taxId: formData.get('taxId'),
                description: formData.get('description'),
                status: 'draft',
                files: [...uploadedFiles],
                submittedBy: currentUser
            };
            
            expenses.push(expense);
            loadExpenses();
            updateDashboard();
            form.reset();
            uploadedFiles = [];
            document.getElementById('fileList').innerHTML = '';
            document.getElementById('budgetAlert').innerHTML = '';
            alert('草稿已儲存！');
        }

        // 測試流程
        function testWorkflow() {
            const form = document.getElementById('expenseForm');
            if (!form.checkValidity()) {
                alert('請先完整填寫必要欄位');
                return;
            }
            
            alert('開始測試流程...\n\n✅ 表單驗證通過\n✅ 預算檢查通過\n✅ 審核權限確認\n\n測試流程完成！');
        }

        // 執行系統測試
        function runSystemTest() {
            const testLevel = document.getElementById('testLevel').value;
            const autoTest = document.getElementById('autoTest').value;
            
            let testResults = '';
            
            switch(testLevel) {
                case 'basic':
                    testResults = '基本測試完成：\n✅ 系統連線正常\n✅ 資料庫連接正常';
                    break;
                case 'standard':
                    testResults = '標準測試完成：\n✅ 系統連線正常\n✅ 資料庫連接正常\n✅ 預算計算正確\n✅ 審核流程正常';
                    break;
                case 'comprehensive':
                    testResults = '完整測試完成：\n✅ 系統連線正常\n✅ 資料庫連接正常\n✅ 預算計算正確\n✅ 審核流程正常\n✅ 檔案上傳功能\n✅ 報表生成功能\n✅ 權限控制正常';
                    break;
            }
            
            alert(`系統測試結果：\n\n${testResults}\n\n自動測試：${autoTest === 'enabled' ? '已啟用' : '已停用'}`);
        }

        // 完成測試
        function completeTest(expenseId) {
            const expense = expenses.find(exp => exp.id === expenseId);
            if (expense) {
                expense.status = 'pending';
                loadExpenses();
                loadTestingItems();
                loadApprovalItems();
                updateDashboard();
                alert('測試完成，申請已進入核准流程！');
            }
        }

        // 測試失敗
        function failTest(expenseId) {
            const reason = prompt('請輸入測試失敗原因：');
            if (reason) {
                const expense = expenses.find(exp => exp.id === expenseId);
                if (expense) {
                    expense.status = 'rejected';
                    expense.rejectReason = `測試失敗：${reason}`;
                    loadExpenses();
                    loadTestingItems();
                    updateDashboard();
                    alert('測試失敗，申請已被拒絕！');
                }
            }
        }

        // 核准申請
        function approveExpense(id) {
            const expense = expenses.find(exp => exp.id === id);
            if (expense && confirm(`確定要核准 ${expense.applicant} 的申請嗎？\n金額：${expense.amount.toLocaleString()}`)) {
                expense.status = 'approved';
                expense.approvedDate = new Date().toLocaleDateString('zh-TW');
                expense.approvedBy = currentUser;
                loadExpenses();
                loadApprovalItems();
                updateDashboard();
                alert('申請已核准！');
            }
        }

        // 拒絕申請
        function rejectExpense(id) {
            const reason = prompt('請輸入拒絕原因：');
            if (reason) {
                const expense = expenses.find(exp => exp.id === id);
                if (expense) {
                    expense.status = 'rejected';
                    expense.rejectReason = reason;
                    expense.rejectedDate = new Date().toLocaleDateString('zh-TW');
                    expense.rejectedBy = currentUser;
                    // 退回預算
                    updateAccountUsage(expense.accountCode, -expense.amount);
                    loadExpenses();
                    loadApprovalItems();
                    loadBudgetOverview();
                    updateDashboard();
                    alert('申請已拒絕！');
                }
            }
        }

        // 檔案處理
        function handleFiles(files) {
            Array.from(files).forEach(file => {
                if (file.size > 10 * 1024 * 1024) {
                    alert(`檔案 ${file.name} 超過 10MB 限制`);
                    return;
                }
                
                const allowedTypes = [
                    'application/pdf',
                    'application/msword',
                    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
                    'application/vnd.ms-excel',
                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
                    'image/jpeg',
                    'image/png'
                ];
                
                if (!allowedTypes.includes(file.type)) {
                    alert(`檔案 ${file.name} 格式不支援`);
                    return;
                }
                
                uploadedFiles.push({
                    name: file.name,
                    size: file.size,
                    type: file.type,
                    uploadDate: new Date().toISOString()
                });
            });
            
            updateFileList();
        }

        // 更新檔案列表
        function updateFileList() {
            const fileList = document.getElementById('fileList');
            fileList.innerHTML = '';
            
            uploadedFiles.forEach((file, index) => {
                const fileItem = document.createElement('div');
                fileItem.className = 'file-item';
                
                const fileIcon = getFileIcon(file.type);
                const fileSize = (file.size / 1024).toFixed(1);
                
                fileItem.innerHTML = `
                    <div class="file-info">
                        <span style="font-size: 20px;">${fileIcon}</span>
                        <div>
                            <div class="file-name">${file.name}</div>
                            <div class="file-size">${fileSize} KB</div>
                        </div>
                    </div>
                    <button class="btn btn-danger" onclick="removeFile(${index})" style="padding: 8px 12px;">🗑️ 移除</button>
                `;
                fileList.appendChild(fileItem);
            });
        }

        // 取得檔案圖示
        function getFileIcon(type) {
            if (type.includes('pdf')) return '📄';
            if (type.includes('word')) return '📝';
            if (type.includes('excel') || type.includes('sheet')) return '📊';
            if (type.includes('image')) return '🖼️';
            return '📎';
        }

        // 移除檔案
        function removeFile(index) {
            uploadedFiles.splice(index, 1);
            updateFileList();
        }

        // 篩選功能
        function filterExpenses() {
            // 實作篩選邏輯
            console.log('篩選功能執行中...');
        }

        // 檢視費用詳情
        function viewExpense(index) {
            const expense = expenses[index];
            const fileList = expense.files.map(f => f.name).join(', ') || '無附件';
            
            alert(`申請詳情：
            
申請編號：#${expense.id}
申請人：${expense.applicant}
申請部門：${expense.applicantDept}
${expense.onBehalfOf ? `代申請人：${expense.onBehalfOf}` : ''}
${expense.onBehalfOfDept ? `代申請部門：${expense.onBehalfOfDept}` : ''}
會計科目：${expense.accountCode}
申請金額：${expense.amount.toLocaleString()}
發票號碼：${expense.invoiceNumber || '無'}
統一編號：${expense.taxId || '無'}
申請說明：${expense.description}
申請狀態：${expense.status}
附件：${fileList}
申請時間：${expense.date}`);
        }

        function viewExpenseDetail(id) {
            const expense = expenses.find(exp => exp.id === id);
            if (expense) {
                viewExpense(expenses.indexOf(expense));
            }
        }

        // 模態框控制
        function showModal(modalId) {
            document.getElementById(modalId).style.display = 'block';
        }

        function closeModal(modalId) {
            document.getElementById(modalId).style.display = 'none';
        }

        // 載入分類選項
        function loadAccountCategoryOptions() {
            const categorySelect = document.getElementById('accountCategoryInput');
            const categoryFilter = document.getElementById('categoryFilter');
            
            // 更新科目表單的分類選項
            if (categorySelect) {
                categorySelect.innerHTML = '<option value="">請選擇分類</option>';
                accountCategories.forEach(category => {
                    const option = document.createElement('option');
                    option.value = category.id;
                    option.textContent = `${category.icon} ${category.name}`;
                    categorySelect.appendChild(option);
                });
            }
            
            // 更新篩選器的分類選項
            if (categoryFilter) {
                const currentValue = categoryFilter.value;
                categoryFilter.innerHTML = '<option value="">所有分類</option>';
                accountCategories.forEach(category => {
                    const option = document.createElement('option');
                    option.value = category.id;
                    option.textContent = `${category.icon} ${category.name}`;
                    categoryFilter.appendChild(option);
                });
                categoryFilter.value = currentValue;
            }
        }

        // 載入分類列表
        function loadCategoriesList() {
            const container = document.getElementById('categoriesList');
            if (!container) return;
            
            container.innerHTML = '';
            
            accountCategories.forEach((category, index) => {
                const categoryItem = document.createElement('div');
                categoryItem.style.cssText = `
                    background: white;
                    border: 1px solid #e0e0e0;
                    border-left: 4px solid ${category.color};
                    border-radius: 10px;
                    padding: 15px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                `;
                
                categoryItem.innerHTML = `
                    <div>
                        <div style="font-weight: 600; color: #0f4c75; margin-bottom: 5px;">
                            <span style="color: ${category.color}; font-size: 18px;">${category.icon}</span>
                            ${category.name} (${category.id})
                        </div>
                        <div style="font-size: 14px; color: #666;">
                            ${category.description || '無說明'}
                        </div>
                        <div style="font-size: 12px; color: #999; margin-top: 5px;">
                            使用此分類的科目：${accounts.filter(acc => acc.category === category.id).length} 個
                        </div>
                    </div>
                    <div style="display: flex; gap: 8px;">
                        <button class="btn btn-warning" onclick="editCategory(${index})" style="padding: 6px 12px;">✏️ 修改</button>
                        <button class="btn btn-danger" onclick="deleteCategory(${index})" style="padding: 6px 12px;">🗑️ 刪除</button>
                    </div>
                `;
                
                container.appendChild(categoryItem);
            });
        }

        // 編輯分類
        function editCategory(index) {
            const category = accountCategories[index];
            if (!category) return;
            
            const newName = prompt('請輸入新的分類名稱：', category.name);
            if (newName && newName.trim()) {
                category.name = newName.trim();
                
                const newDesc = prompt('請輸入新的分類說明：', category.description || '');
                if (newDesc !== null) {
                    category.description = newDesc.trim();
                }
                
                loadCategoriesList();
                loadAccountCategoryOptions();
                loadAccounts(); // 重新載入科目表格以更新分類顯示
                alert('分類已更新！');
            }
        }

        // 刪除分類
        function deleteCategory(index) {
            const category = accountCategories[index];
            if (!category) return;
            
            // 檢查是否有科目使用此分類
            const usedByAccounts = accounts.filter(acc => acc.category === category.id);
            if (usedByAccounts.length > 0) {
                alert(`無法刪除分類「${category.name}」！\n\n此分類被以下科目使用：\n${usedByAccounts.map(acc => `• ${acc.code} - ${acc.name}`).join('\n')}\n\n請先修改這些科目的分類。`);
                return;
            }
            
            if (confirm(`確定要刪除分類「${category.name}」嗎？`)) {
                accountCategories.splice(index, 1);
                loadCategoriesList();
                loadAccountCategoryOptions();
                alert('分類已刪除！');
            }
        }

        // 修改編輯會計科目函數
        function editAccount(code) {
            const account = accounts.find(acc => acc.code === code);
            if (account) {
                document.getElementById('accountCodeInput').value = account.code;
                document.getElementById('accountCodeInput').readOnly = true; // 編輯時不允許修改代碼
                document.getElementById('accountNameInput').value = account.name;
                document.getElementById('budgetAmountInput').value = account.budget;
                document.getElementById('accountCategoryInput').value = account.category;
                document.getElementById('accountStatusInput').value = account.status || 'active';
                document.getElementById('accountDescInput').value = account.description || '';
                showModal('accountModal');
            }
        }

        // 修改模態框關閉時的重置
        function closeModal(modalId) {
            document.getElementById(modalId).style.display = 'none';
            
            // 重置表單
            if (modalId === 'accountModal') {
                document.getElementById('accountForm').reset();
                document.getElementById('accountCodeInput').readOnly = false;
            } else if (modalId === 'categoryModal') {
                document.getElementById('categoryForm').reset();
            }
        }

        // 修改showModal函數以載入分類相關數據
        function showModal(modalId) {
            if (modalId === 'accountModal') {
                loadAccountCategoryOptions();
            } else if (modalId === 'categoryModal') {
                loadCategoriesList();
            }
            document.getElementById(modalId).style.display = 'block';
        }

        // 修改系統初始化函數
        function initializeSystem() {
            console.log('開始初始化系統...'); // 除錯用
            
            try {
                loadAccountCategoryOptions(); // 先載入分類選項
                loadAccounts();
                console.log('會計科目載入完成');
                
                loadDepartments();
                console.log('部門資料載入完成');
                
                loadExpenses();
                console.log('費用記錄載入完成');
                
                loadBudgetOverview();
                console.log('預算總覽載入完成');
                
                loadApprovalRules();
                console.log('核准規則載入完成');
                
                updateDashboard();
                console.log('儀表板更新完成');
                
                updateLastUpdate();
                console.log('時間更新完成');
                
                // 添加一些示例數據
                if (expenses.length === 0) {
                    expenses = [
                        {
                            id: 1001,
                            date: '2024-01-15',
                            applicant: '王小明',
                            applicantDept: 'IT',
                            accountCode: '6201',
                            amount: 5000,
                            description: '台北出差交通費',
                            status: 'approved',
                            files: []
                        },
                        {
                            id: 1002,
                            date: '2024-01-16',
                            applicant: '李小華',
                            applicantDept: 'MKT',
                            accountCode: '6203',
                            amount: 1200,
                            description: '客戶拜訪餐費',
                            status: 'pending',
                            files: []
                        },
                        {
                            id: 1003,
                            date: '2024-01-17',
                            applicant: currentUser,
                            applicantDept: currentUserDept,
                            accountCode: '6204',
                            amount: 800,
                            description: '辦公用品採購',
                            status: 'testing',
                            files: []
                        }
                    ];
                    console.log('示例資料已新增');
                }
                
                console.log('系統初始化完成！');
            } catch(error) {
                console.error('系統初始化失敗:', error);
                throw error;
            }
        }

        // 部門表單
        document.getElementById('departmentForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const code = document.getElementById('deptCodeInput').value;
            const name = document.getElementById('deptNameInput').value;
            const manager = document.getElementById('deptManagerInput').value;
            const budget = parseFloat(document.getElementById('deptBudgetInput').value);
            const desc = document.getElementById('deptDescInput').value;
            
            const existingIndex = departments.findIndex(dept => dept.code === code);
            
            if (existingIndex >= 0) {
                departments[existingIndex] = { ...departments[existingIndex], name, manager, budget, desc };
            } else {
                departments.push({ code, name, manager, budget, used: 0, desc });
            }
            
            loadDepartments();
            closeModal('departmentModal');
            this.reset();
            alert('部門資料已儲存！');
        });

        // 核准規則表單
        document.getElementById('approvalRuleForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const rule = {
                minAmount: parseFloat(document.getElementById('minAmountInput').value),
                maxAmount: parseFloat(document.getElementById('maxAmountInput').value),
                level: parseInt(document.getElementById('approvalLevelInput').value),
                approver: document.getElementById('approverInput').value,
                timeLimit: parseInt(document.getElementById('timeLimitInput').value),
                autoEscalate: document.getElementById('autoEscalateInput').value
            };
            
            approvalRules.push(rule);
            loadApprovalRules();
            closeModal('approvalRuleModal');
            this.reset();
            alert('核准規則已新增！');
        });

        // 編輯功能
        function editAccount(code) {
            const account = accounts.find(acc => acc.code === code);
            if (account) {
                document.getElementById('accountCodeInput').value = account.code;
                document.getElementById('accountNameInput').value = account.name;
                document.getElementById('budgetAmountInput').value = account.budget;
                document.getElementById('accountCategoryInput').value = account.category;
                showModal('accountModal');
            }
        }

        function editDepartment(code) {
            const dept = departments.find(d => d.code === code);
            if (dept) {
                document.getElementById('deptCodeInput').value = dept.code;
                document.getElementById('deptNameInput').value = dept.name;
                document.getElementById('deptManagerInput').value = dept.manager;
                document.getElementById('deptBudgetInput').value = dept.budget;
                document.getElementById('deptDescInput').value = dept.desc || '';
                showModal('departmentModal');
            }
        }

        // 刪除功能
        function deleteAccount(code) {
            if (confirm('確定要刪除此會計科目嗎？')) {
                const index = accounts.findIndex(acc => acc.code === code);
                if (index >= 0) {
                    accounts.splice(index, 1);
                    loadAccounts();
                    loadBudgetOverview();
                }
            }
        }

        function deleteDepartment(code) {
            if (confirm('確定要刪除此部門嗎？')) {
                const index = departments.findIndex(dept => dept.code === code);
                if (index >= 0) {
                    departments.splice(index, 1);
                    loadDepartments();
                }
            }
        }

        // 報表功能
        function exportReport() {
            const reportType = document.getElementById('reportType').value;
            const dateRange = document.getElementById('dateRange').value;
            const format = document.getElementById('reportFormat').value;
            
            let data = [];
            let filename = '';
            
            switch (reportType) {
                case 'expense':
                    data = expenses.map(expense => ({
                        '申請編號': expense.id,
                        '申請日期': expense.date,
                        '申請人': expense.applicant,
                        '申請部門': expense.applicantDept,
                        '代申請人': expense.onBehalfOf || '',
                        '會計科目': expense.accountCode,
                        '銷售額': expense.salesAmount || 0,
                        '稅率': (expense.taxRate || 0) + '%',
                        '進項稅額': expense.inputTax || 0,
                        '總計金額': expense.amount,
                        '發票號碼': expense.invoiceNumber || '',
                        '統一編號': expense.taxId || '',
                        '狀態': expense.status,
                        '申請說明': expense.description
                    }));
                    filename = `費用申請報表_${new Date().toLocaleDateString('zh-TW')}`;
                    break;
                    
                case 'budget':
                    data = accounts.map(account => ({
                        '科目代碼': account.code,
                        '科目名稱': account.name,
                        '科目分類': account.category,
                        '預算額度': account.budget,
                        '已使用': account.used,
                        '剩餘預算': account.budget - account.used,
                        '使用率': ((account.used / account.budget) * 100).toFixed(1) + '%'
                    }));
                    filename = `預算執行報表_${new Date().toLocaleDateString('zh-TW')}`;
                    break;
                    
                case 'department':
                    data = departments.map(dept => ({
                        '部門代碼': dept.code,
                        '部門名稱': dept.name,
                        '部門主管': dept.manager,
                        '預算額度': dept.budget,
                        '已用預算': dept.used || 0,
                        '部門說明': dept.desc || ''
                    }));
                    filename = `部門費用報表_${new Date().toLocaleDateString('zh-TW')}`;
                    break;
                    
                case 'approval':
                    data = approvalRules.map((rule, index) => ({
                        '規則編號': index + 1,
                        '最小金額': rule.minAmount,
                        '最大金額': rule.maxAmount,
                        '核准層級': rule.level,
                        '審核人員': rule.approver,
                        '審核時限': rule.timeLimit + '天',
                        '自動升級': rule.autoEscalate === 'yes' ? '是' : '否'
                    }));
                    filename = `核准流程報表_${new Date().toLocaleDateString('zh-TW')}`;
                    break;
                    
                case 'testing':
                    data = expenses.filter(e => e.status === 'testing').map(expense => ({
                        '申請編號': expense.id,
                        '申請人': expense.applicant,
                        '申請部門': expense.applicantDept,
                        '金額': expense.amount,
                        '測試狀態': '進行中',
                        '開始時間': expense.date
                    }));
                    filename = `測試結果報表_${new Date().toLocaleDateString('zh-TW')}`;
                    break;
            }
            
            if (data.length === 0) {
                alert('沒有資料可匯出');
                return;
            }
            
            downloadFile(data, filename, format);
            
            // 更新報表預覽
            updateReportPreview(data, reportType);
        }

        // 更新報表預覽
        function updateReportPreview(data, reportType) {
            const preview = document.getElementById('reportPreview');
            
            if (data.length === 0) {
                preview.innerHTML = '<p style="color: #666;">沒有資料可預覽</p>';
                return;
            }
            
            let html = `<h4 style="color: #0f4c75; margin-bottom: 15px;">${getReportTitle(reportType)}</h4>`;
            html += '<div style="overflow-x: auto;"><table style="width: 100%; border-collapse: collapse;">';
            
            // 表頭
            const headers = Object.keys(data[0]);
            html += '<thead><tr>';
            headers.forEach(header => {
                html += `<th style="background: #0f4c75; color: white; padding: 10px; border: 1px solid #ddd;">${header}</th>`;
            });
            html += '</tr></thead>';
            
            // 資料行（最多顯示5行）
            html += '<tbody>';
            const previewData = data.slice(0, 5);
            previewData.forEach(row => {
                html += '<tr>';
                headers.forEach(header => {
                    html += `<td style="padding: 8px; border: 1px solid #ddd;">${row[header]}</td>`;
                });
                html += '</tr>';
            });
            html += '</tbody></table></div>';
            
            if (data.length > 5) {
                html += `<p style="margin-top: 10px; color: #666; text-align: center;">顯示前 5 筆，共 ${data.length} 筆資料</p>`;
            }
            
            preview.innerHTML = html;
        }

        function getReportTitle(reportType) {
            const titles = {
                'expense': '費用申請報表',
                'budget': '預算執行報表',
                'department': '部門費用報表',
                'approval': '核准流程報表',
                'testing': '測試結果報表'
            };
            return titles[reportType] || '報表';
        }

        // 下載檔案
        function downloadFile(data, filename, format) {
            if (format === 'csv') {
                downloadCSV(data, filename + '.csv');
            } else if (format === 'xlsx') {
                // 模擬 Excel 下載
                downloadCSV(data, filename + '.xlsx');
                alert('Excel 格式匯出完成！（實際環境中會產生 .xlsx 檔案）');
            } else if (format === 'pdf') {
                alert('PDF 匯出功能需要額外的 PDF 生成庫支援');
            }
        }

        // CSV 下載功能
        function downloadCSV(data, filename) {
            if (data.length === 0) {
                alert('沒有資料可匯出');
                return;
            }
            
            const headers = Object.keys(data[0]);
            const csvContent = [
                headers.join(','),
                ...data.map(row => headers.map(header => `"${row[header]}"`).join(','))
            ].join('\n');
            
            const blob = new Blob(['\uFEFF' + csvContent], { type: 'text/csv;charset=utf-8;' });
            const link = document.createElement('a');
            const url = URL.createObjectURL(blob);
            link.setAttribute('href', url);
            link.setAttribute('download', filename);
            link.style.visibility = 'hidden';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }

        // 匯入功能
        function importData() {
            if (!hasPermission('all') && currentUserRole !== '系統管理員') {
                alert('您沒有權限執行匯入功能');
                return;
            }
            document.getElementById('importFile').click();
        }

        // 排程報表
        function scheduleReport() {
            if (!hasPermission('all') && currentUserRole !== '系統管理員') {
                alert('您沒有權限設定排程報表');
                return;
            }
            
            const reportType = document.getElementById('reportType').value;
            const frequency = prompt('請選擇排程頻率：\n1. 每日\n2. 每週\n3. 每月\n\n請輸入 1, 2, 或 3：');
            
            if (frequency) {
                const frequencies = { '1': '每日', '2': '每週', '3': '每月' };
                const selectedFreq = frequencies[frequency];
                
                if (selectedFreq) {
                    alert(`排程報表設定完成！\n\n報表類型：${getReportTitle(reportType)}\n排程頻率：${selectedFreq}\n\n系統將自動產生報表並發送至您的信箱。`);
                } else {
                    alert('無效的選擇，請重新設定。');
                }
            }
        }

        function handleImport(file) {
            if (!file) return;
            
            const reader = new FileReader();
            reader.onload = function(e) {
                try {
                    const text = e.target.result;
                    const lines = text.split('\n');
                    const headers = lines[0].split(',');
                    
                    // 這裡可以根據檔案格式進行資料匯入
                    alert(`匯入功能開發中...\n\n檔案：${file.name}\n大小：${(file.size / 1024).toFixed(1)} KB\n表頭：${headers.slice(0, 3).join(', ')}...`);
                } catch (error) {
                    alert('檔案格式錯誤，請檢查檔案內容');
                }
            };
            reader.readAsText(file);
        }

        // 拖拽上傳
        document.addEventListener('DOMContentLoaded', function() {
            const dropArea = document.querySelector('.file-drop-area');
            
            if (dropArea) {
                ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                    dropArea.addEventListener(eventName, preventDefaults, false);
                });
                
                function preventDefaults(e) {
                    e.preventDefault();
                    e.stopPropagation();
                }
                
                ['dragenter', 'dragover'].forEach(eventName => {
                    dropArea.addEventListener(eventName, highlight, false);
                });
                
                ['dragleave', 'drop'].forEach(eventName => {
                    dropArea.addEventListener(eventName, unhighlight, false);
                });
                
                function highlight() {
                    dropArea.classList.add('dragover');
                }
                
                function unhighlight() {
                    dropArea.classList.remove('dragover');
                }
                
                dropArea.addEventListener('drop', handleDrop, false);
                
                function handleDrop(e) {
                    const dt = e.dataTransfer;
                    const files = dt.files;
                    handleFiles(files);
                }
            }
        });

        // 點擊模態框外部關閉
        window.onclick = function(event) {
            const modals = document.querySelectorAll('.modal');
            modals.forEach(modal => {
                if (event.target === modal) {
                    modal.style.display = 'none';
                }
            });
        };
    </script>
</body>
</html>